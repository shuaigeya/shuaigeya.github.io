{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"数据库\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/06/29/redis%E5%9F%BA%E7%A1%80%E7%AF%87/",
            "url": "http://example.com/2022/06/29/redis%E5%9F%BA%E7%A1%80%E7%AF%87/",
            "title": "redis基础篇",
            "date_published": "2022-06-29T08:12:54.000Z",
            "content_html": "<p>redis 中文文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkaXMubmV0LmNuL3R1dG9yaWFsLzM1MDIuaHRtbA==\">请戳此</span></p>\n<h2 id=\"nosql-简介\"><a class=\"markdownIt-Anchor\" href=\"#nosql-简介\">#</a> NoSql 简介</h2>\n<h3 id=\"什么是关系型数据库\"><a class=\"markdownIt-Anchor\" href=\"#什么是关系型数据库\">#</a> 什么是关系型数据库</h3>\n<p>依赖关系模型而创建的数据库就是关系型数据库。关系模型就是 一对一，一对多，多对多这些模型。</p>\n<h3 id=\"关系型数据库遵循-acip原则\"><a class=\"markdownIt-Anchor\" href=\"#关系型数据库遵循-acip原则\">#</a> 关系型数据库遵循 ACIP 原则</h3>\n<ol>\n<li>A (Atomicity) 原子性：原子不可再分。在一次事务操作中，所有的操作要么全部成功，要么全部失败。</li>\n<li>C (Consistency) 一致性：事务的运行不会改变数据库原有的一致性约束。在一次购物操作前后，a+b 的账户余额是不变的。</li>\n<li>I (Isolation) 独立性：一个事务的操作不会影响到另一个事务的执行。</li>\n<li>D (Durability) 持久性：事务操作一旦提交，就永远保存在数据库中。</li>\n</ol>\n<h2 id=\"redis-简介\"><a class=\"markdownIt-Anchor\" href=\"#redis-简介\">#</a> Redis 简介</h2>\n<h3 id=\"什么是redis\"><a class=\"markdownIt-Anchor\" href=\"#什么是redis\">#</a> 什么是 Redis?</h3>\n<p>Redis 是目前运用较广的一款关系型数据库，遵守 BSD 协议，是一个高性能的 key-value 数据库。<br>\nredis 的特点有：</p>\n<ol>\n<li>不仅仅支持 key-value 数据格式，还支持 list，set，zset，hash 等数据结构</li>\n<li>支持数据的持久化，可以把内存中的数据保存在磁盘中。重启后可以继续使用。</li>\n<li>支持数据备份。</li>\n</ol>\n",
            "tags": [
                "redis"
            ]
        },
        {
            "id": "http://example.com/2022/06/28/Mysql%E4%BA%8B%E5%8A%A1%E7%AF%87/",
            "url": "http://example.com/2022/06/28/Mysql%E4%BA%8B%E5%8A%A1%E7%AF%87/",
            "title": "Mysql事务篇",
            "date_published": "2022-06-28T06:41:16.000Z",
            "content_html": "",
            "tags": [
                "Mysql"
            ]
        }
    ]
}