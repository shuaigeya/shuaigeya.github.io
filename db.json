{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/shoka/source/css/comment.styl","path":"css/comment.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/mermaid.styl","path":"css/mermaid.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/app.styl","path":"css/app.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/404.png","path":"images/404.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/paypal.png","path":"images/paypal.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/play_disc.png","path":"images/play_disc.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/play_needle.png","path":"images/play_needle.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/search.png","path":"images/search.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/languages.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1656469103168},{"_id":"source/404/index.md","hash":"46baed00070a4156875b67d62d6f94b0cd5df8a7","modified":1656471127046},{"_id":"source/_posts/Mysql事务篇.md","hash":"e019d734ebaae4650ce3b78f519fe6d77edbfb65","modified":1656471127046},{"_id":"source/about/index.md","hash":"aaf99897a16ef02fedb4fb3fc2343819f527592a","modified":1656471127048},{"_id":"source/_posts/shoka 食用手册.md","hash":"1da3336322bbac929bc491b752a9be1cded96236","modified":1656488770036},{"_id":"source/_posts/Spring基础概念篇.md","hash":"db1287d5742812c104708474a6852d3d20847558","modified":1656471127047},{"_id":"source/_posts/java基础篇面试题.md","hash":"73742c9c18550c42cdc303f1ef6402f08f0f8c77","modified":1656475255727},{"_id":"source/categories/index.md","hash":"a4fe87780b2a560d1d75dfb36bdd275bc202745d","modified":1656471127048},{"_id":"source/_posts/myBatis-面试题.md","hash":"dca3025a4bfae226a51012acbd4bb960838ad1c1","modified":1656490202725},{"_id":"source/tags/index.md","hash":"8afb9fbe07e6a4e7dbfb36a3cf7f96f626b1ed2a","modified":1656471127050},{"_id":"source/contact/index.md","hash":"725a01f829453b63066959dd47b3e783ccab620f","modified":1656471127049},{"_id":"source/links/index.md","hash":"02c093f556acfc03fc1ba4427ca908abdc3545dd","modified":1656469431729},{"_id":"source/friends/index.md","hash":"a43cdd726ca333d9600164392417e5c585ace63f","modified":1656471127049},{"_id":"themes/shoka/.gitignore","hash":"bfd7d4c19270c8b349107ffb26f50302943571a9","modified":1656471127092},{"_id":"themes/shoka/_config.yml","hash":"66a8cc45fca01de9ca421a8c7b53bc63b0bc584c","modified":1656476254832},{"_id":"themes/shoka/_images.yml","hash":"bca089255d50638a65fe91b58cd94aff42d9f49c","modified":1656471127093},{"_id":"themes/shoka/.editorconfig","hash":"57f50fc69fdc98a28c9bb04c338865a8b267b4bc","modified":1656471127091},{"_id":"themes/shoka/package.json","hash":"78e368a218a687a4a0d1936fc723e2e6fca2bdfb","modified":1656471127142},{"_id":"themes/shoka/README.md","hash":"162ec0ffef6a69e09c9b00dbc9a8f400b3826fac","modified":1656471127092},{"_id":"themes/shoka/LICENSE","hash":"1a301f54567fbcd67fc138c37071b96ac9e670a1","modified":1656471127092},{"_id":"themes/shoka/languages/README.md","hash":"d40601b23836327a36b0d75361f57e95413c50b3","modified":1656471127128},{"_id":"themes/shoka/languages/default.yml","hash":"3866a13fe896b4c5d46541c5cab1f7e61453df19","modified":1656471127129},{"_id":"themes/shoka/languages/en.yml","hash":"41fb069ee781a9b36be8257627a0f5bd9479cf7f","modified":1656471127129},{"_id":"themes/shoka/languages/ja.yml","hash":"579f9e79003eb37a9c68346db0961bff4d9f6a03","modified":1656471127129},{"_id":"themes/shoka/languages/zh-CN.yml","hash":"c0c46decf11022e52c20bc20c35acb0b4de46a15","modified":1656471127130},{"_id":"themes/shoka/languages/zh-HK.yml","hash":"85a4b1ecd3a36b2e92ebe923495aab1682359e3c","modified":1656471127130},{"_id":"themes/shoka/languages/zh-TW.yml","hash":"060f1886301e9c13241b63c2b5983ebc9f35acaa","modified":1656471127131},{"_id":"themes/shoka/layout/archive.njk","hash":"01847f527849426aab8fcad795597a7076d761fd","modified":1656471127139},{"_id":"themes/shoka/layout/index.njk","hash":"561b703a552bf6afaa76a128945a1cc26df3f865","modified":1656471127140},{"_id":"themes/shoka/layout/category.njk","hash":"11a604e3285262d34368b1eb1bf6ff8349c3345f","modified":1656471127140},{"_id":"themes/shoka/layout/page.njk","hash":"2dac7be8699c8ad6364831eac2ab0167dba7c689","modified":1656471127140},{"_id":"themes/shoka/layout/tag.njk","hash":"f1e9539c178db724961e04bcc08fa94279aae4b1","modified":1656471127142},{"_id":"themes/shoka/example/_config.yml","hash":"a6596f241cd5d2e970c025cf927d54ed226e9ec0","modified":1656471127094},{"_id":"themes/shoka/layout/_alternate/atom.ejs","hash":"4b40589945713ab19eea69902b0768fc69ec1027","modified":1656471127131},{"_id":"themes/shoka/layout/post.njk","hash":"7213742682ed6c759f6078809b404401ea1784c0","modified":1656471127141},{"_id":"themes/shoka/example/_config.shoka.yml","hash":"ab07b1fd050e985e120d0e1797c588c721ac1772","modified":1656471127094},{"_id":"themes/shoka/example/package.json","hash":"4744a2d23b4558be8932df77989c2ba133f0388e","modified":1656471127095},{"_id":"themes/shoka/layout/_alternate/json.ejs","hash":"74975fb6d1ca1099cd843c180ce49353b2061c53","modified":1656471127132},{"_id":"themes/shoka/layout/_alternate/rss.ejs","hash":"bd8df7a85959df3231b0bb617d7b5d05a98c48de","modified":1656471127132},{"_id":"themes/shoka/layout/_partials/footer.njk","hash":"4aabeeac4cec09a868aed39282c9d3b3a23e38ba","modified":1656471127135},{"_id":"themes/shoka/layout/_partials/header.njk","hash":"370b4ae76844b6659ad4dc506a37d6ac9bcead20","modified":1656471127135},{"_id":"themes/shoka/layout/_partials/layout.njk","hash":"322cd6927edccbd47eafb63097181ad115a9a4d5","modified":1656471127136},{"_id":"themes/shoka/layout/_partials/pagination.njk","hash":"676ef88ab76d735696f6e8c04338eb3887fb63cc","modified":1656471127136},{"_id":"themes/shoka/layout/_macro/card.njk","hash":"0dfd6a2e21119131566f03d7bebedda15d4261b0","modified":1656471127133},{"_id":"themes/shoka/layout/_macro/breadcrumb.njk","hash":"1dc8ee1de2c20d514c251145d00536d9b0170335","modified":1656471127133},{"_id":"themes/shoka/layout/_macro/comment.njk","hash":"fc91ceb0b2c86a38839cef84f50487f119367cd7","modified":1656471127133},{"_id":"themes/shoka/layout/_macro/segment.njk","hash":"c8e21eeea552c7c685e50252d1983785edc6a29a","modified":1656471127134},{"_id":"themes/shoka/layout/_macro/postmeta.njk","hash":"11e73da9e907e20ea81b920c47265e88fb5d210c","modified":1656471127133},{"_id":"themes/shoka/layout/_macro/sidebar.njk","hash":"7f170b2649f09e88933de4121803990baf5d4022","modified":1656471127134},{"_id":"themes/shoka/layout/_macro/widgets.njk","hash":"1045129c1163e603e9a927161417354758602737","modified":1656471127135},{"_id":"themes/shoka/scripts/filters/locals.js","hash":"63ada9722d96f021f1cd398bbe7bb4991dde1231","modified":1656471127147},{"_id":"themes/shoka/scripts/filters/post.js","hash":"44069b5007b3a692eba70dd9354fc0f4dd27d5ed","modified":1656471127148},{"_id":"themes/shoka/scripts/generaters/archive.js","hash":"a6f87b628f6125cc2614f7214e2ef2995a084663","modified":1656471127148},{"_id":"themes/shoka/scripts/generaters/config.js","hash":"8b9aebab15e192f3a5bc2539ce3aeaddbee98be8","modified":1656471127148},{"_id":"themes/shoka/scripts/generaters/images.js","hash":"fcf3d1802c4bb5ff6f2683987f048371e2d00488","modified":1656471127148},{"_id":"themes/shoka/scripts/generaters/index.js","hash":"27b52046c1452b8cb7ca1f64f1eff3d8ad4b0ab6","modified":1656471127149},{"_id":"themes/shoka/scripts/generaters/pages.js","hash":"dd8bb4adec63efa8efc282febd4da989e1523262","modified":1656471127149},{"_id":"themes/shoka/scripts/generaters/script.js","hash":"243e11786081d8d7d5d3b52338925a71c8da8e2c","modified":1656471127149},{"_id":"themes/shoka/scripts/helpers/asset.js","hash":"df236860cd91a1c6ffc78ffb4156730d6a59c5d1","modified":1656471127150},{"_id":"themes/shoka/scripts/helpers/engine.js","hash":"02bdf84317ddb775cbb5fcdb9ad70c1cb5631ffd","modified":1656471127150},{"_id":"themes/shoka/scripts/helpers/list_categories.js","hash":"84507e35a428179bd5838fe80d527a9433916391","modified":1656471127150},{"_id":"themes/shoka/scripts/renderer/njk.js","hash":"480f25325494e4caa04794cd496912f628ae2691","modified":1656471127151},{"_id":"themes/shoka/scripts/tags/links.js","hash":"ac5844307e62693a9add08b89d9ec4d6aa5bc25e","modified":1656471127152},{"_id":"themes/shoka/scripts/tags/media.js","hash":"a0f66450f48a1ce0f6c532e687fc3ee85aeed175","modified":1656471127152},{"_id":"themes/shoka/source/css/_colors.styl","hash":"6cb23f12441e7517cc614336d867cfa2f35284d7","modified":1656471127152},{"_id":"themes/shoka/source/css/_mixins.styl","hash":"68c4bfee20cc6ee477548ce3e4e28e19697d8af3","modified":1656471127182},{"_id":"themes/shoka/source/css/_iconfont.styl","hash":"05117f95a16e5f7c08351492752994c03f185911","modified":1656471127181},{"_id":"themes/shoka/source/css/_variables.styl","hash":"c939f1af34a0a8a6a37e6439a8b609a26c9e09d2","modified":1656471127182},{"_id":"themes/shoka/source/css/comment.styl","hash":"7502a76342c8d84e4a476b35a91fcec22a15cbed","modified":1656471127183},{"_id":"themes/shoka/source/css/app.styl","hash":"572d20c4c574b87a2fc49290206c90c8baa7133d","modified":1656471127183},{"_id":"themes/shoka/source/css/mermaid.styl","hash":"ec821a3f997691b92b0926ba4534c94a795ef587","modified":1656471127183},{"_id":"themes/shoka/source/images/avatar.jpg","hash":"93af0fd2ee6322c5c77760eefba6c81afa2e313e","modified":1656471127186},{"_id":"themes/shoka/source/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1656471127185},{"_id":"themes/shoka/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1656471127186},{"_id":"themes/shoka/source/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1656471127184},{"_id":"themes/shoka/source/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1656471127187},{"_id":"themes/shoka/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1656471127184},{"_id":"themes/shoka/source/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1656471127185},{"_id":"themes/shoka/source/images/logo.svg","hash":"830dfbd6dff2986130819f747b25db230b05ca84","modified":1656471127188},{"_id":"themes/shoka/source/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1656471127188},{"_id":"themes/shoka/source/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1656471127188},{"_id":"themes/shoka/source/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1656471127189},{"_id":"themes/shoka/source/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1656471127189},{"_id":"themes/shoka/example/source/_data/custom.styl","hash":"d90bc10047d824d73d4f0ba10f81dfe1628558a0","modified":1656471127096},{"_id":"themes/shoka/example/source/_data/languages.yml","hash":"79b49c2d38c14e29274ebf461fbb3f83ea018fbb","modified":1656471127097},{"_id":"themes/shoka/source/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1656471127189},{"_id":"themes/shoka/example/source/_data/colors.styl","hash":"00b06d9366f6a477d02e94eea16bd07aafb7ff2f","modified":1656471127095},{"_id":"themes/shoka/example/source/_data/iconfont.styl","hash":"b3c284f5bf48ae84d4f016779cf43b67c87e0b87","modified":1656471127096},{"_id":"themes/shoka/example/source/_posts/categories.md","hash":"c1ca20b94100a77efc569f43986951a2551f6b64","modified":1656471127097},{"_id":"themes/shoka/example/source/_data/images.yml","hash":"bca089255d50638a65fe91b58cd94aff42d9f49c","modified":1656471127097},{"_id":"themes/shoka/example/source/_posts/elements.md","hash":"66dde9f7cef1c9a90a15776b633c8ab4272ed826","modified":1656471127106},{"_id":"themes/shoka/example/source/_posts/code-highlight.md","hash":"607f8cf393ad1082398c7f5246e229405bda4de3","modified":1656471127098},{"_id":"themes/shoka/example/source/_posts/excerpts.md","hash":"9f51babe45d9f45a04d1e6c52eb8a96b58478029","modified":1656471127106},{"_id":"themes/shoka/example/source/_posts/gallery-post.md","hash":"ae577f5171f0354fb0a3702da5bb8ba14372dc28","modified":1656471127106},{"_id":"themes/shoka/example/source/_posts/hello-world.md","hash":"ceb583413b760182a3c2463bf7f15c03328a37bc","modified":1656471127107},{"_id":"themes/shoka/example/source/_posts/link-post-without-title.md","hash":"811e7ec6f4ed747388e8255b27e482d04b304c51","modified":1656471127107},{"_id":"themes/shoka/example/source/_posts/link-post.md","hash":"ac9a280178ba63ccc3acc7540aa96db4d08b5b21","modified":1656471127108},{"_id":"themes/shoka/example/source/_posts/long-title.md","hash":"e11f04c88e453b6b265d634458a69d0124edc684","modified":1656471127108},{"_id":"themes/shoka/example/source/_posts/no-title.md","hash":"24536a15b2a9633d0a4dfad66c0ab51a683d78b5","modified":1656471127109},{"_id":"themes/shoka/example/source/_posts/markdown.md","hash":"7b03cdab8abff7010603ad0e66ef611564e08694","modified":1656471127108},{"_id":"themes/shoka/example/source/_posts/tags.md","hash":"788411e01f179f65bc6ea61c73601a0a4a1072d0","modified":1656471127109},{"_id":"themes/shoka/example/source/_posts/tag-plugins.md","hash":"35e8c2ca9e48d5653f8d69ef05a0221c1b207e4e","modified":1656471127109},{"_id":"themes/shoka/example/source/_posts/videos.md","hash":"32735a9b9f0370d49e0f4311c8bc1fbcfba98445","modified":1656471127110},{"_id":"themes/shoka/example/source/friends/_data.yml","hash":"1b090bd2f25f4d00471f31c4136141d4ad1ae19a","modified":1656471127128},{"_id":"themes/shoka/example/source/_posts/中文測試.md","hash":"0dd7c0e2e2242939b69dd6d66fe28f56b69ff65a","modified":1656471127110},{"_id":"themes/shoka/example/source/_posts/日本語テスト.md","hash":"5ae9b45f038baa96bd179b4ad0b03409e9a76bdb","modified":1656471127110},{"_id":"themes/shoka/layout/_partials/head/head.njk","hash":"91acf8eae82afe770d6f174a37c12b9617b0d97c","modified":1656471127135},{"_id":"themes/shoka/layout/_partials/head/head_unique.njk","hash":"afb09eeda0de5dd4df67ba80b58b9ace9eaf5e0d","modified":1656471127135},{"_id":"themes/shoka/layout/_partials/post/copyright.njk","hash":"b6aa82c28683bdb337920db718841bee207dc2d9","modified":1656471127137},{"_id":"themes/shoka/layout/_partials/post/footer.njk","hash":"8e7cae0c45bbc2cf3e91eac10ab319caa6b27d2e","modified":1656471127137},{"_id":"themes/shoka/layout/_partials/post/nav.njk","hash":"01e49cc56aa8722f0eb2739ce2e55080429e576e","modified":1656471127137},{"_id":"themes/shoka/layout/_partials/post/post.njk","hash":"e1846d51aca86c873f1c74152b80d50eec79507b","modified":1656471127138},{"_id":"themes/shoka/layout/_partials/post/reward.njk","hash":"f7185a561288a754beae1323a19c200b99dccd08","modified":1656471127138},{"_id":"themes/shoka/layout/_partials/third-party/baidu-analytics.njk","hash":"9f4568ede657e6844fe54e3cdf9635ecd94b2bf9","modified":1656471127139},{"_id":"themes/shoka/layout/_partials/sidebar/overview.njk","hash":"3c12aa376662f15366177792a35873f2344152b8","modified":1656471127139},{"_id":"themes/shoka/source/js/_app/dom.js","hash":"1bd152fc94f33793e71cada5ec8bbfd71e531d6c","modified":1656471127190},{"_id":"themes/shoka/layout/_partials/sidebar/menu.njk","hash":"14192d78b637ca07ec4a0505268bfaecca2f0680","modified":1656471127138},{"_id":"themes/shoka/source/js/_app/fireworks.js","hash":"e4bf5a9955618bb43020e175e59e497b28c78131","modified":1656471127191},{"_id":"themes/shoka/source/js/_app/page.js","hash":"d8a51bdd02bc839290df4ea9708a3e1cf39a823a","modified":1656471127191},{"_id":"themes/shoka/source/js/_app/pjax.js","hash":"0528d97ad162eb9f70e21540d993d48e6027ba2d","modified":1656471127192},{"_id":"themes/shoka/source/js/_app/player.js","hash":"d49cc563b239659d554c838f784af8244023f886","modified":1656471127192},{"_id":"themes/shoka/example/source/_posts/images.md","hash":"f09b4339b8334584ec311be7e2a2e7e839bcfa04","modified":1656471127107},{"_id":"themes/shoka/source/js/_app/utils.js","hash":"6e123d054bf003deb4fc5eb80cfec233e4941851","modified":1656471127193},{"_id":"themes/shoka/source/js/_app/sidebar.js","hash":"1d532138431e98e28f7579a52b0e88909aba76e0","modified":1656471127193},{"_id":"themes/shoka/source/css/_common/components/components.styl","hash":"3677ba4471475026d232e3af00d5e6de027151e6","modified":1656471127153},{"_id":"themes/shoka/source/css/_common/outline/mobile.styl","hash":"15c7be9e4e1b3c6b55e7beef5685898ae4f846ab","modified":1656471127172},{"_id":"themes/shoka/source/css/_common/scaffolding/animate.styl","hash":"dda625de5efb0e5b53e81c9da053850e9767da22","modified":1656471127176},{"_id":"themes/shoka/source/css/_common/outline/outline.styl","hash":"e107c799b88278db84a2d5a8819d17f48511f73e","modified":1656471127172},{"_id":"themes/shoka/source/css/_common/scaffolding/base.styl","hash":"415635fa6f145a53a10fa7f0b72247747530f9e7","modified":1656471127177},{"_id":"themes/shoka/source/css/_common/scaffolding/buttons.styl","hash":"555c4b09c9970931e73abe544ae6356cf870670e","modified":1656471127177},{"_id":"themes/shoka/source/css/_common/scaffolding/divider.styl","hash":"faa2e60cafdb0379f66a9ff7f9bd8e4d53551882","modified":1656471127178},{"_id":"themes/shoka/source/css/_common/scaffolding/normalize.styl","hash":"eea39861e6cb0cdc0e26d2f7878c2059991d3d40","modified":1656471127179},{"_id":"themes/shoka/source/css/_common/scaffolding/pagination.styl","hash":"80bb3542fb6c7245f9f559c97938a65d29a61784","modified":1656471127179},{"_id":"themes/shoka/source/css/_common/scaffolding/scaffolding.styl","hash":"14295140c2e5e50545a9b8404839589d486d78c9","modified":1656471127180},{"_id":"themes/shoka/source/css/_common/scaffolding/ribbon.styl","hash":"e9c99fbd15cb9b118091d6e9add6aaf2abd8ab7d","modified":1656471127179},{"_id":"themes/shoka/source/css/_common/scaffolding/scrollbar.styl","hash":"f34503ae1dce5bfc964d52f3f22601058fc7a907","modified":1656471127180},{"_id":"themes/shoka/source/css/_common/scaffolding/tables.styl","hash":"a67472f2b36047f5f1c2d85e398afe5003e06087","modified":1656471127180},{"_id":"themes/shoka/source/css/_common/scaffolding/tip.styl","hash":"ffdfdc91b9d29060a36bfdf92b746596fd05afd9","modified":1656471127181},{"_id":"themes/shoka/source/css/_common/scaffolding/toggles.styl","hash":"a71d609401001c9b15608d5276636180d49cf844","modified":1656471127181},{"_id":"themes/shoka/example/source/friends/index.md","hash":"c44fdf47aae95588c686a15fa2046ab9a4c09b9b","modified":1656471127128},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc.md","hash":"cd2c1d52df850bd7e8cc130bfb19ae6a5fc97f25","modified":1656471127102},{"_id":"themes/shoka/source/css/_common/components/highlight/highlight.styl","hash":"18be598f5f1d75cb4869adcd1ae47bd19456b2c5","modified":1656471127154},{"_id":"themes/shoka/source/css/_common/components/highlight/operation.styl","hash":"f2ac0660d8f9e4d4582a4a8c4f97bd6d80162a6d","modified":1656471127154},{"_id":"themes/shoka/source/css/_common/components/pages/home.styl","hash":"95ad71e89df31b58e9db37b4b0c092f2102f91b2","modified":1656471127155},{"_id":"themes/shoka/source/css/_common/components/pages/collapse.styl","hash":"a0ecc9afe8c03eae06075fc53c39057e05d22b1e","modified":1656471127155},{"_id":"themes/shoka/example/source/_posts/computer-science/note/cover.jpg","hash":"6d077a7330284d0fb2b79e96d7e5b56121395df3","modified":1656471127102},{"_id":"themes/shoka/source/css/_common/scaffolding/iconfont.styl","hash":"b3c284f5bf48ae84d4f016779cf43b67c87e0b87","modified":1656471127178},{"_id":"themes/shoka/source/css/_common/components/pages/pages.styl","hash":"e2af0d359247a82dab6f8d6ce90d6b0d5fca4dc9","modified":1656471127155},{"_id":"themes/shoka/source/css/_common/components/post/breadcrumb.styl","hash":"43f7a0d6c7f7bde6a4e521acb67a5b0543a12b77","modified":1656471127156},{"_id":"themes/shoka/source/css/_common/components/post/copyright.styl","hash":"0a3991a291b53301c6a3f5a86532ea75b8acf355","modified":1656471127157},{"_id":"themes/shoka/source/css/_common/components/pages/tag-cloud.styl","hash":"2ebc481064dae0b593e8caff838044f92a5e2ef7","modified":1656471127156},{"_id":"themes/shoka/source/css/_common/components/post/expand.styl","hash":"ecd24e46405f6e2f08394d7e1e65c86b9294642f","modified":1656471127157},{"_id":"themes/shoka/source/css/_common/components/post/footer.styl","hash":"256f45905d0d1b17d74b6cbfebdc5ef7a107ed83","modified":1656471127157},{"_id":"themes/shoka/source/css/_common/components/post/nav.styl","hash":"7c8f1bf2c755b8c3d1a41eaf1aa6f59d3c23a4a2","modified":1656471127158},{"_id":"themes/shoka/source/js/_app/global.js","hash":"a792824837bcf9cb90ec2c831dea2dc4de85cbf1","modified":1656471127191},{"_id":"themes/shoka/source/css/_common/components/post/header.styl","hash":"b1b13db6e10a9b46fbd052dc4db1aa1cfb97ab97","modified":1656471127157},{"_id":"themes/shoka/source/css/_common/components/post/rtl.styl","hash":"4a431ec0b382ae6693f1aee54599da18eddc6a59","modified":1656471127159},{"_id":"themes/shoka/source/css/_common/components/post/tags.styl","hash":"e3348bf77b141068b91181655945277d6270312b","modified":1656471127159},{"_id":"themes/shoka/source/css/_common/components/tags/collapse.styl","hash":"aa663a0fcee4138be9a3272172cd30b8118261df","modified":1656471127159},{"_id":"themes/shoka/source/css/_common/components/tags/container.styl","hash":"541d71873e36373b671a7cec61ac10db48413d9f","modified":1656471127160},{"_id":"themes/shoka/source/css/_common/components/post/reward.styl","hash":"897a0a0e37ed23ef8ca6c644b3794cf8c32f1650","modified":1656471127158},{"_id":"themes/shoka/source/css/_common/components/tags/label.styl","hash":"dff26da9be9a7304780941b95d144d03e6b7b19b","modified":1656471127160},{"_id":"themes/shoka/source/css/_common/components/post/post.styl","hash":"510d1f7457c2191f8a7bd84ce79cc3c0aade44a8","modified":1656471127158},{"_id":"themes/shoka/source/css/_common/components/tags/links.styl","hash":"2732062ecaf3a5fec24442bf2fc25de7f4279ff9","modified":1656471127160},{"_id":"themes/shoka/source/css/_common/components/tags/note.styl","hash":"0eb5410344a0e4506b641689d6835ea8929553e8","modified":1656471127161},{"_id":"themes/shoka/source/css/_common/components/tags/list.styl","hash":"53ceac76fcaa1353cae910e80449810be0cc4254","modified":1656471127161},{"_id":"themes/shoka/source/css/_common/components/tags/player.styl","hash":"f182dad19b6cc575a1631713a00fd7f0d4516c19","modified":1656471127161},{"_id":"themes/shoka/source/css/_common/components/tags/tabs.styl","hash":"950cb00307208fbb332119796c4a1ac850f19941","modified":1656471127162},{"_id":"themes/shoka/source/css/_common/components/tags/quiz.styl","hash":"cc0fbb250fdf00887c043e41f0cb777f4f46f992","modified":1656471127162},{"_id":"themes/shoka/source/css/_common/components/tags/tags.styl","hash":"b353f2dfc373508d0e0c798bd22107f63591054f","modified":1656471127162},{"_id":"themes/shoka/source/css/_common/components/third-party/pace.styl","hash":"c93cb3a4715394f8a35db9bb65e03aea8bda45da","modified":1656471127166},{"_id":"themes/shoka/source/css/_common/components/third-party/loading.styl","hash":"dc513c323ac3555a94e96809d57d09bc4d65fc2b","modified":1656471127163},{"_id":"themes/shoka/source/css/_common/components/third-party/search.styl","hash":"33b29d3782f058f2b8b89deb3f738fda2517ca4c","modified":1656471127167},{"_id":"themes/shoka/source/css/_common/components/third-party/theme.styl","hash":"2d112448cc435b58c57ebd9b31e016e6ae8af5d0","modified":1656471127167},{"_id":"themes/shoka/source/css/_common/components/third-party/widgets.styl","hash":"71fe298ba9de676ebc3c00febe10784aa7dc119a","modified":1656471127168},{"_id":"themes/shoka/source/css/_common/components/third-party/third-party.styl","hash":"68ee764bfb8bb0bb478cd41c78895dd341600d26","modified":1656471127167},{"_id":"themes/shoka/source/css/_common/outline/footer/footer.styl","hash":"66592076afe7b86b7962aac5451e0b5248d7172e","modified":1656471127169},{"_id":"themes/shoka/source/css/_common/components/third-party/valine.styl","hash":"59c69ea7817c0348872f865d406b9650814279ce","modified":1656471127168},{"_id":"themes/shoka/source/css/_common/outline/header/brand.styl","hash":"6335d84443326d19fff8e17f364d4cace8f19445","modified":1656471127170},{"_id":"themes/shoka/source/css/_common/outline/header/header.styl","hash":"ca7f94ebb0f3090405aab79889b81d4e708a6ab6","modified":1656471127170},{"_id":"themes/shoka/source/css/_common/outline/header/image.styl","hash":"0777d91cbc7e228426c46ee97627a32054526013","modified":1656471127170},{"_id":"themes/shoka/source/css/_common/outline/header/menu.styl","hash":"3b309ade55860b4d8c693b336a33e470436a32b7","modified":1656471127171},{"_id":"themes/shoka/source/css/_common/outline/header/nav.styl","hash":"b267a98cfee639dad82e0889b29ac5bee2634ab6","modified":1656471127171},{"_id":"themes/shoka/source/css/_common/outline/header/right.styl","hash":"d9a7f9923ea7ad2b3aeda9ce7140697f9d094054","modified":1656471127171},{"_id":"themes/shoka/source/css/_common/outline/header/tool.styl","hash":"1fa043670ba8cc2a4c86081e5dd88e9ed4b1f978","modified":1656471127172},{"_id":"themes/shoka/source/css/_common/outline/header/waves.styl","hash":"f9e6ae9e36429568c0323a112f39d6ea2baaefd6","modified":1656471127172},{"_id":"themes/shoka/source/css/_common/outline/sidebar/author.styl","hash":"a09b34b35d31a4b8e275bfbb92efa48fe6608d2f","modified":1656471127173},{"_id":"themes/shoka/source/css/_common/outline/sidebar/menu.styl","hash":"46df47361148673e6c2ce114b4f498be63c0e4ab","modified":1656471127174},{"_id":"themes/shoka/source/css/_common/outline/sidebar/quick.styl","hash":"01b34ce24ad3dde1147c8f3a6babd70e3d45b461","modified":1656471127174},{"_id":"themes/shoka/source/css/_common/outline/sidebar/related.styl","hash":"e300d2ec33fb7bfbc9310578b8891eb6cd137e86","modified":1656471127174},{"_id":"themes/shoka/source/css/_common/outline/sidebar/dimmer.styl","hash":"66f159f21cafe1dc71570f7018678a0a3862c175","modified":1656471127173},{"_id":"themes/shoka/source/css/_common/outline/sidebar/sidebar.styl","hash":"6a1a13ecc6de3ceba1957f95aa852d440abaae9b","modified":1656471127175},{"_id":"themes/shoka/source/css/_common/outline/sidebar/social.styl","hash":"33f6459f44e15ef3320e3b208e5345ff1d0cee5f","modified":1656471127175},{"_id":"themes/shoka/source/css/_common/outline/sidebar/state.styl","hash":"c2eaaba4c35df5253ae236318b5e6f76861d37f8","modified":1656471127175},{"_id":"themes/shoka/source/css/_common/outline/sidebar/tab.styl","hash":"b6f604f7293230d0113dabe5deeb61b809fdf035","modified":1656471127176},{"_id":"themes/shoka/source/css/_common/outline/sidebar/toc.styl","hash":"5836be92d4d153bd44ff86fe05e0ce83b11ae569","modified":1656471127176},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/cover.jpg","hash":"57341ddf90eeb71d0b9a3fef8cf1f094f9c299b3","modified":1656471127099},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/config.md","hash":"19c4015857b6953da18628967b7a0b84e624a43d","modified":1656471127103},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/week-2.md","hash":"5efffda6c8abc24a1d4671c54928cfe7fb838ce5","modified":1656471127100},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/week-1.md","hash":"8284465659be7a4b7568244264bc236c01a6d1cb","modified":1656471127100},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/display.md","hash":"fce410e8e5756ea256c6a23ee688455bb8d51e93","modified":1656471127104},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/flowchart.styl","hash":"83296761c85b8e82d0757b1a4792a74d50509d2d","modified":1656471127164},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/dependents.md","hash":"5048e40092f39f776060e083c822698e5842a3ea","modified":1656471127104},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/special.md","hash":"3c0c0bf6b7cd1ab3c12e0d097330937a2803ed10","modified":1656471127105},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/class.styl","hash":"0d9b0d1d2ecf981b881e9416fc770d47f679a50f","modified":1656471127163},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/git.styl","hash":"a7e5f3bb9378b1a4fb0f710e28a02fd4fd1b3040","modified":1656471127164},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/gantt.styl","hash":"bae6617a32026891f510483aa6d25c70a82c5945","modified":1656471127164},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/pie.styl","hash":"bce4029a87d60ba40ff4faadb9d95c76b824141a","modified":1656471127165},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/sequence.styl","hash":"7e91e07c39e1c1343626c8d5b9fecfebc6c086f6","modified":1656471127166},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/mermaid.styl","hash":"e54378b88ce839626bdbcb00676d79dbe70a742c","modified":1656471127165},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/state.styl","hash":"83d21d840bd2bc4249e2dced49efe8cef2281f05","modified":1656471127166},{"_id":"themes/shoka/example/source/assets/wallpaper-2572384.jpg","hash":"1df3620ab8c69fe2498a746f8ead057162df0637","modified":1656471127123},{"_id":"themes/shoka/screenshot.png","hash":"676ab8bfe3fa106e5b88617ab377cd6b438cc0d9","modified":1656471127147},{"_id":"themes/shoka/example/source/assets/wallpaper-878514.jpg","hash":"9f9705a377c42320b335b3c66b023e62b80e56e3","modified":1656471127127},{"_id":"themes/shoka/example/source/assets/wallpaper-2311325.jpg","hash":"ddaaaeb4fa04a05c83053c1f8149720d18c9c8de","modified":1656471127120},{"_id":"public/about/index.html","hash":"4b22377036cb131af6f2c5ecb871982c6976b464","modified":1656493965836},{"_id":"public/categories/index.html","hash":"551abce5b058547ca0c8a80c5c3f9ec7eb1b4c16","modified":1656493965836},{"_id":"public/404/index.html","hash":"238e075ec8b371536869002259cc04253215ce22","modified":1656493965836},{"_id":"public/contact/index.html","hash":"2bc6e46363a3372f94936ecefd25b9ec3a3f08d3","modified":1656493965836},{"_id":"public/tags/index.html","hash":"ac23dcfe01d4cd82f7d9a0c15f2b2784d9bcb123","modified":1656493965836},{"_id":"public/links/index.html","hash":"d325f62bccc498ac1ee22803a343198df0eede9a","modified":1656493965836},{"_id":"public/friends/index.html","hash":"329736b1ea06cb4d54eb5aa61d8d77ec2709de56","modified":1656493965836},{"_id":"public/2022/06/28/Mysql事务篇/index.html","hash":"c85c0b65fc48f66715745b02c72952734c931478","modified":1656493965836},{"_id":"public/archives/index.html","hash":"0d79e74a4db9cc43913f7fc153d9115c9c8b71a5","modified":1656493965836},{"_id":"public/archives/2022/index.html","hash":"fab89785c01c98c008f45c011a3db5c61c5b4b15","modified":1656493965836},{"_id":"public/archives/2022/06/index.html","hash":"a4d15ac25e4268f7156b79215299efc0b88994a0","modified":1656493965836},{"_id":"public/categories/框架篇/index.html","hash":"4eda986bdaa6ced3015884485943307a130768ec","modified":1656493965836},{"_id":"public/categories/面试题集/index.html","hash":"8edc359180b8ce1bbc9fe178ff0f231c2d899244","modified":1656493965836},{"_id":"public/categories/数据库/index.html","hash":"69ee34b7f1a91ff680bd7bdd6105cdd89264d544","modified":1656493965836},{"_id":"public/tags/Mysql/index.html","hash":"cc5299f027937c46106ad92ccafd29f66577406c","modified":1656493965836},{"_id":"public/categories/软件安装/index.html","hash":"346f9b2682eab60057238d5bcf89fff790f3dbf3","modified":1656493965836},{"_id":"public/tags/spring/index.html","hash":"ddd5470c7b0f7884dd0e601b60a92a318c0eaad0","modified":1656493965836},{"_id":"public/tags/Java/index.html","hash":"d1eef6c9adde8890de8c85d6922aa24d8dea4d0e","modified":1656493965836},{"_id":"public/tags/mybatis/index.html","hash":"c146273fb31ae25ab1624ed8a78d5cdc3f351f2c","modified":1656493965836},{"_id":"public/tags/hexo/index.html","hash":"f49b5c4dde8979c9e59cd17926c393e1d9532283","modified":1656493965836},{"_id":"public/404.html","hash":"cd523bdc64f0ac481f5a9c8b03da70fb00895b7d","modified":1656493965836},{"_id":"public/js/app.js","hash":"edb24893c85db230cb628e2578878ed208676a9f","modified":1656488942459},{"_id":"public/2022/06/29/myBatis-面试题/index.html","hash":"ad1853c3f01b68f37475052a8411d68c9810e2d2","modified":1656493965836},{"_id":"public/2022/06/29/shoka 食用手册/index.html","hash":"34ebcc792e504bb312e2fd95e5d9523872c8a45e","modified":1656493965836},{"_id":"public/2022/06/28/Spring基础概念篇/index.html","hash":"ee92ec900dbf0d7cb15c82cabb40df4d595351eb","modified":1656493965836},{"_id":"public/2022/06/28/java基础篇面试题/index.html","hash":"71766558e3393940c60885aa361bdf52803acf54","modified":1656493965836},{"_id":"public/index.html","hash":"4eb277fe6ed29b58623bb4d06dd1e918985adec1","modified":1656493965836},{"_id":"public/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1656488942459},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1656488942459},{"_id":"public/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1656488942459},{"_id":"public/images/avatar.jpg","hash":"93af0fd2ee6322c5c77760eefba6c81afa2e313e","modified":1656488942459},{"_id":"public/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1656488942459},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1656488942459},{"_id":"public/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1656488942459},{"_id":"public/css/comment.css","hash":"3fdd834337b7789dc939b5865bf492195183b24d","modified":1656488942459},{"_id":"public/css/mermaid.css","hash":"3fe1b97a64b969d4d7a470a4929cb432afefd1bd","modified":1656488942459},{"_id":"public/css/app.css","hash":"9a032dede92b941e74adf99b15f06ce9cbaa82c4","modified":1656488942459},{"_id":"public/images/logo.svg","hash":"830dfbd6dff2986130819f747b25db230b05ca84","modified":1656488942459},{"_id":"public/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1656488942459},{"_id":"public/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1656488942459},{"_id":"public/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1656488942459},{"_id":"public/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1656488942459},{"_id":"public/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1656488942459},{"_id":"source/_posts/redis基础篇.md","hash":"884fb1b5129e11c6b11652862521fc50cf235ced","modified":1656493939468},{"_id":"public/2022/06/29/redis基础篇/index.html","hash":"80a439f9b0c717eb1e88db68a6a8118004e21b0a","modified":1656493965836},{"_id":"public/tags/redis/index.html","hash":"6d5d96aeb0e3014216f0870b72b064be5854ca82","modified":1656493965836}],"Category":[{"name":"数据库","_id":"cl4zaqwks0004w4ujbrcjbw5l"},{"name":"框架篇","_id":"cl4zaqwl1000cw4ujasrba5r1"},{"name":"面试题集","_id":"cl4zaqwl5000iw4uj7p6e4c29"},{"name":"软件安装","_id":"cl4zaqwl8000pw4uj03288csj"}],"Data":[],"Page":[{"title":"关于","date":"2022-06-28T06:26:24.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2022-06-28 14:26:24\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2022-06-29T02:52:07.048Z","path":"about/index.html","comments":1,"_id":"cl4zaqwke0000w4uj3hw75hz0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2022-06-28T06:25:08.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-06-28 14:25:08\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2022-06-29T02:52:07.048Z","path":"categories/index.html","comments":1,"_id":"cl4zaqwkp0002w4uj88nw8h3h","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"404","date":"2022-06-28T06:28:02.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2022-06-28 14:28:02\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2022-06-29T02:52:07.046Z","path":"404/index.html","comments":1,"_id":"cl4zaqwku0006w4uj8liv8jmo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"评论板","date":"2022-06-28T06:26:52.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: 评论板\ndate: 2022-06-28 14:26:52\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2022-06-29T02:52:07.049Z","path":"contact/index.html","comments":1,"_id":"cl4zaqwkw0008w4ujhwkq36js","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2022-06-28T06:25:51.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-06-28 14:25:51\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2022-06-29T02:52:07.050Z","path":"tags/index.html","comments":1,"_id":"cl4zaqwky000aw4uj4h2c4uu0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"外链","date":"2022-06-29T02:23:16.000Z","type":"friends","layout":"friends","_content":"","source":"links/index.md","raw":"---\ntitle: 外链\ndate: 2022-06-29 10:23:16\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2022-06-29T02:23:51.729Z","path":"links/index.html","comments":1,"_id":"cl4zaqwl3000fw4uj969z719o","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"友情页","date":"2022-06-28T06:27:31.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: 友情页\ndate: 2022-06-28 14:27:31\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2022-06-29T02:52:07.049Z","path":"friends/index.html","comments":1,"_id":"cl4zaqwl4000gw4uj4y760272","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Mysql事务篇","date":"2022-06-28T06:41:16.000Z","_content":"","source":"_posts/Mysql事务篇.md","raw":"---\ntitle: Mysql事务篇\ndate: 2022-06-28 14:41:16\ntags:\n- Mysql\ncategories:\n- 数据库\n---\n","slug":"Mysql事务篇","published":1,"updated":"2022-06-29T02:52:07.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zaqwkk0001w4uja5mlduht","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Spring基础概念篇","date":"2022-06-28T07:40:21.000Z","_content":"## 1.什么是Spring\n容器框架：可以管理所有的组件（类）\n## 2.IOC 和 AOP\n\n**IOC**：也叫控制反转，是一种设计思想，将原本程序中手动创建对象的控制权交给Sping框架来管理。IOC容器是Sping用来实现IOC的载体，IOC容器实际上就是个MAP，MAP中存放各种对象。IOC容器就像是一个工厂，当我们需要创建一个对象时，只需要配置好配置文件、注解即可，完全不用考虑对象是如何被创建出来的。\n\n**AOP**:面向切面编程，将那些与业务无关，却为业务模块所共同调用的逻辑或泽恩封装起来，便于减少系统重复代码，降低耦合性，有利于未来的扩展和可维护性。\n\n\n\n## 3.springMVC执行流程。\n1.用户发送请求，这个请求会先到dispatcherServlet(中央控制器)。\n\n2.中央控制器接受请求调用handlerMappers（处理器映射器），并由此知道该请求由哪个controller处理 。\n\n3.中央控制器调用 HandlerAdapter （处理器适配器），告诉中央控制器应该要去执行哪个controller。\n\n4.前端控制器调用HandlerAdapter,HandlerAdapter经过适配器调用具体的controller。\n\n5.controller执行完返回modelAndView（视图和数据），并层层返回给中央控制器。\n\n6.中央适配器把modelAadView交给viewReslover(视图解析器)，然后返回真正的视图。\n\n7.前端控制器将数据模型填充到视图中。\n\n8.前端控制器将响应结果返回给用户。","source":"_posts/Spring基础概念篇.md","raw":"---\ntitle: Spring基础概念篇\ndate: 2022-06-28 15:40:21\ntags:\n- spring\ncategories:\n- 框架篇\n---\n## 1.什么是Spring\n容器框架：可以管理所有的组件（类）\n## 2.IOC 和 AOP\n\n**IOC**：也叫控制反转，是一种设计思想，将原本程序中手动创建对象的控制权交给Sping框架来管理。IOC容器是Sping用来实现IOC的载体，IOC容器实际上就是个MAP，MAP中存放各种对象。IOC容器就像是一个工厂，当我们需要创建一个对象时，只需要配置好配置文件、注解即可，完全不用考虑对象是如何被创建出来的。\n\n**AOP**:面向切面编程，将那些与业务无关，却为业务模块所共同调用的逻辑或泽恩封装起来，便于减少系统重复代码，降低耦合性，有利于未来的扩展和可维护性。\n\n\n\n## 3.springMVC执行流程。\n1.用户发送请求，这个请求会先到dispatcherServlet(中央控制器)。\n\n2.中央控制器接受请求调用handlerMappers（处理器映射器），并由此知道该请求由哪个controller处理 。\n\n3.中央控制器调用 HandlerAdapter （处理器适配器），告诉中央控制器应该要去执行哪个controller。\n\n4.前端控制器调用HandlerAdapter,HandlerAdapter经过适配器调用具体的controller。\n\n5.controller执行完返回modelAndView（视图和数据），并层层返回给中央控制器。\n\n6.中央适配器把modelAadView交给viewReslover(视图解析器)，然后返回真正的视图。\n\n7.前端控制器将数据模型填充到视图中。\n\n8.前端控制器将响应结果返回给用户。","slug":"Spring基础概念篇","published":1,"updated":"2022-06-29T02:52:07.047Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zaqwkq0003w4ujeladgzi1","content":"<h2 id=\"1什么是spring\"><a class=\"markdownIt-Anchor\" href=\"#1什么是spring\">#</a> 1. 什么是 Spring</h2>\n<p>容器框架：可以管理所有的组件（类）</p>\n<h2 id=\"2ioc-和-aop\"><a class=\"markdownIt-Anchor\" href=\"#2ioc-和-aop\">#</a> 2.IOC 和 AOP</h2>\n<p><strong>IOC</strong>：也叫控制反转，是一种设计思想，将原本程序中手动创建对象的控制权交给 Sping 框架来管理。IOC 容器是 Sping 用来实现 IOC 的载体，IOC 容器实际上就是个 MAP，MAP 中存放各种对象。IOC 容器就像是一个工厂，当我们需要创建一个对象时，只需要配置好配置文件、注解即可，完全不用考虑对象是如何被创建出来的。</p>\n<p><strong>AOP</strong>: 面向切面编程，将那些与业务无关，却为业务模块所共同调用的逻辑或泽恩封装起来，便于减少系统重复代码，降低耦合性，有利于未来的扩展和可维护性。</p>\n<h2 id=\"3springmvc执行流程\"><a class=\"markdownIt-Anchor\" href=\"#3springmvc执行流程\">#</a> 3.springMVC 执行流程。</h2>\n<p>1. 用户发送请求，这个请求会先到 dispatcherServlet (中央控制器)。</p>\n<p>2. 中央控制器接受请求调用 handlerMappers（处理器映射器），并由此知道该请求由哪个 controller 处理 。</p>\n<p>3. 中央控制器调用 HandlerAdapter （处理器适配器），告诉中央控制器应该要去执行哪个 controller。</p>\n<p>4. 前端控制器调用 HandlerAdapter,HandlerAdapter 经过适配器调用具体的 controller。</p>\n<p>5.controller 执行完返回 modelAndView（视图和数据），并层层返回给中央控制器。</p>\n<p>6. 中央适配器把 modelAadView 交给 viewReslover (视图解析器)，然后返回真正的视图。</p>\n<p>7. 前端控制器将数据模型填充到视图中。</p>\n<p>8. 前端控制器将响应结果返回给用户。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1什么是spring\"><a class=\"markdownIt-Anchor\" href=\"#1什么是spring\">#</a> 1. 什么是 Spring</h2>\n<p>容器框架：可以管理所有的组件（类）</p>\n<h2 id=\"2ioc-和-aop\"><a class=\"markdownIt-Anchor\" href=\"#2ioc-和-aop\">#</a> 2.IOC 和 AOP</h2>\n<p><strong>IOC</strong>：也叫控制反转，是一种设计思想，将原本程序中手动创建对象的控制权交给 Sping 框架来管理。IOC 容器是 Sping 用来实现 IOC 的载体，IOC 容器实际上就是个 MAP，MAP 中存放各种对象。IOC 容器就像是一个工厂，当我们需要创建一个对象时，只需要配置好配置文件、注解即可，完全不用考虑对象是如何被创建出来的。</p>\n<p><strong>AOP</strong>: 面向切面编程，将那些与业务无关，却为业务模块所共同调用的逻辑或泽恩封装起来，便于减少系统重复代码，降低耦合性，有利于未来的扩展和可维护性。</p>\n<h2 id=\"3springmvc执行流程\"><a class=\"markdownIt-Anchor\" href=\"#3springmvc执行流程\">#</a> 3.springMVC 执行流程。</h2>\n<p>1. 用户发送请求，这个请求会先到 dispatcherServlet (中央控制器)。</p>\n<p>2. 中央控制器接受请求调用 handlerMappers（处理器映射器），并由此知道该请求由哪个 controller 处理 。</p>\n<p>3. 中央控制器调用 HandlerAdapter （处理器适配器），告诉中央控制器应该要去执行哪个 controller。</p>\n<p>4. 前端控制器调用 HandlerAdapter,HandlerAdapter 经过适配器调用具体的 controller。</p>\n<p>5.controller 执行完返回 modelAndView（视图和数据），并层层返回给中央控制器。</p>\n<p>6. 中央适配器把 modelAadView 交给 viewReslover (视图解析器)，然后返回真正的视图。</p>\n<p>7. 前端控制器将数据模型填充到视图中。</p>\n<p>8. 前端控制器将响应结果返回给用户。</p>\n"},{"title":"java基础篇面试题","date":"2022-06-28T08:09:11.000Z","_content":"\n## 1.面向对象的特征\n**继承，封装，多态。**\n**封装**：将对象的实现细节隐藏起来，然后通过公共方法暴露出该对象的功能。\n**继承**：实现软件复用。子类继承父类后可以直接或间接地使用父类的成员。\n**多态**：同一个行为具有不同的表现形式。\n## 2.JAVA中覆盖和重载的区别\n**覆盖**：子类对父类方法的一种重写。返回值，方法名，参数列表必须相同。访问权限大于等于父类。抛出的异常要小于父类\n**重载**：在一个类中可以有多个重名的方法，根据 参数个数不同，参数类型不同，参数顺序不同  而构成重载。\n## 3.抽象类和接口的区别\n\n1 .  抽象类可以没有抽象方法，但接口中的方法必须是抽象的。\n2 . 抽象类只能被一个类继承，而接口可以继承多个父接口。\n3 . 抽象类可以有普通成员变量，但 接口中的变量必须被初始化，接口中只有常量没有变量。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/47fb42cf20bd4883a3e1222f2bf6eae8.jpeg#pic_center)\n\n\n\n\n怎么选择接口和抽象类：如果要创建一个不带任何方法和成员变量的基类则选择接口，否则选择抽象类。\n\n\n## 4.Java中常用的包\nJava.lang  java.util  java.io  java.io  java.net  java.sql\n\n\n## 5.Java 是值传递还是引用传递？\nJava是值传递的，当我们调用需要传参的函数时，传递过去的参数是它的副本而不是它本身\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b9f8506f3bcd4c168d64ef20c602da87.jpeg#pic_center)\n## 6.static 关键字的含义？\n被static修饰的成员变量或方法可以直接通过类名调用。静态块在编译时被调用。\n\n\n## 7.i++和++i的不同之处？\n两者在运算之前都会把变量值+1.\n后置++ 会将变量赋值给一个临时变量，接下来对临时变量+1，然后用临时变量进行运算。\n\n\n## 8.true，false 与 null是关键字吗？\ntrue false 是布尔类型的字面常量，null是引用类型的字面常量。\n\n\n## 9.Java内存分布\n![在这里插入图片描述](https://img-blog.csdnimg.cn/66b3b7ba39a94249957f043224b6bbd2.jpeg#pic_center)\n**栈**：一般存基础数据类型的值和对象以及基础数据类型的引用\n**堆**：存储创建好的对象和数组，jvm只有一个堆，被所有的线程共享\n**方法区**：jvm只有一个方法区，被所有线程共享。用于存储常量和存储类。\n\n\n## 10.Java反射的实现过程和作用\n**实现过程**：Java语言编译完之后会生成一个.class文件，反射就是通过字节码找到一个类和 类中的方法和属性等。\n**作用**：反射机制就是指程序运行过程中可以获取自身的信息。在Java中 只要知道类的名字就可以通过反射机制找到类的所有信息。\n\n\n## 11.请问error和exception有什么区别?\nerror表示恢复不是不可能但十分困难的一种严重问题，例如，内存溢出。\nexception表示一种设计或实现问题。表示，如果程序正常运行，就从不会发生的情况。\n\n\n## 12.AJAX中get 和 post的区别。\nget传输 把数据添加到url中发送。get传输简单数据，数据大小在1kb以下。get传输的数据会被浏览器缓存下来。\npost传输 把各表单数据及元素作为HTML的消息实体内容传递给web服务器。post没有长度限制。","source":"_posts/java基础篇面试题.md","raw":"---\ntitle: java基础篇面试题\ndate: 2022-06-28 16:09:11\ntags:\n- Java\ncategories:\n- 面试题集\n---\n\n## 1.面向对象的特征\n**继承，封装，多态。**\n**封装**：将对象的实现细节隐藏起来，然后通过公共方法暴露出该对象的功能。\n**继承**：实现软件复用。子类继承父类后可以直接或间接地使用父类的成员。\n**多态**：同一个行为具有不同的表现形式。\n## 2.JAVA中覆盖和重载的区别\n**覆盖**：子类对父类方法的一种重写。返回值，方法名，参数列表必须相同。访问权限大于等于父类。抛出的异常要小于父类\n**重载**：在一个类中可以有多个重名的方法，根据 参数个数不同，参数类型不同，参数顺序不同  而构成重载。\n## 3.抽象类和接口的区别\n\n1 .  抽象类可以没有抽象方法，但接口中的方法必须是抽象的。\n2 . 抽象类只能被一个类继承，而接口可以继承多个父接口。\n3 . 抽象类可以有普通成员变量，但 接口中的变量必须被初始化，接口中只有常量没有变量。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/47fb42cf20bd4883a3e1222f2bf6eae8.jpeg#pic_center)\n\n\n\n\n怎么选择接口和抽象类：如果要创建一个不带任何方法和成员变量的基类则选择接口，否则选择抽象类。\n\n\n## 4.Java中常用的包\nJava.lang  java.util  java.io  java.io  java.net  java.sql\n\n\n## 5.Java 是值传递还是引用传递？\nJava是值传递的，当我们调用需要传参的函数时，传递过去的参数是它的副本而不是它本身\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b9f8506f3bcd4c168d64ef20c602da87.jpeg#pic_center)\n## 6.static 关键字的含义？\n被static修饰的成员变量或方法可以直接通过类名调用。静态块在编译时被调用。\n\n\n## 7.i++和++i的不同之处？\n两者在运算之前都会把变量值+1.\n后置++ 会将变量赋值给一个临时变量，接下来对临时变量+1，然后用临时变量进行运算。\n\n\n## 8.true，false 与 null是关键字吗？\ntrue false 是布尔类型的字面常量，null是引用类型的字面常量。\n\n\n## 9.Java内存分布\n![在这里插入图片描述](https://img-blog.csdnimg.cn/66b3b7ba39a94249957f043224b6bbd2.jpeg#pic_center)\n**栈**：一般存基础数据类型的值和对象以及基础数据类型的引用\n**堆**：存储创建好的对象和数组，jvm只有一个堆，被所有的线程共享\n**方法区**：jvm只有一个方法区，被所有线程共享。用于存储常量和存储类。\n\n\n## 10.Java反射的实现过程和作用\n**实现过程**：Java语言编译完之后会生成一个.class文件，反射就是通过字节码找到一个类和 类中的方法和属性等。\n**作用**：反射机制就是指程序运行过程中可以获取自身的信息。在Java中 只要知道类的名字就可以通过反射机制找到类的所有信息。\n\n\n## 11.请问error和exception有什么区别?\nerror表示恢复不是不可能但十分困难的一种严重问题，例如，内存溢出。\nexception表示一种设计或实现问题。表示，如果程序正常运行，就从不会发生的情况。\n\n\n## 12.AJAX中get 和 post的区别。\nget传输 把数据添加到url中发送。get传输简单数据，数据大小在1kb以下。get传输的数据会被浏览器缓存下来。\npost传输 把各表单数据及元素作为HTML的消息实体内容传递给web服务器。post没有长度限制。","slug":"java基础篇面试题","published":1,"updated":"2022-06-29T04:00:55.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zaqwku0007w4ujaqvvayb8","content":"<h2 id=\"1面向对象的特征\"><a class=\"markdownIt-Anchor\" href=\"#1面向对象的特征\">#</a> 1. 面向对象的特征</h2>\n<p><strong>继承，封装，多态。</strong><br>\n<strong>封装</strong>：将对象的实现细节隐藏起来，然后通过公共方法暴露出该对象的功能。<br>\n<strong>继承</strong>：实现软件复用。子类继承父类后可以直接或间接地使用父类的成员。<br>\n<strong>多态</strong>：同一个行为具有不同的表现形式。</p>\n<h2 id=\"2java中覆盖和重载的区别\"><a class=\"markdownIt-Anchor\" href=\"#2java中覆盖和重载的区别\">#</a> 2.JAVA 中覆盖和重载的区别</h2>\n<p><strong>覆盖</strong>：子类对父类方法的一种重写。返回值，方法名，参数列表必须相同。访问权限大于等于父类。抛出的异常要小于父类<br>\n<strong>重载</strong>：在一个类中可以有多个重名的方法，根据 参数个数不同，参数类型不同，参数顺序不同  而构成重载。</p>\n<h2 id=\"3抽象类和接口的区别\"><a class=\"markdownIt-Anchor\" href=\"#3抽象类和接口的区别\">#</a> 3. 抽象类和接口的区别</h2>\n<p>1 .  抽象类可以没有抽象方法，但接口中的方法必须是抽象的。<br>\n2 . 抽象类只能被一个类继承，而接口可以继承多个父接口。<br>\n3 . 抽象类可以有普通成员变量，但 接口中的变量必须被初始化，接口中只有常量没有变量。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/47fb42cf20bd4883a3e1222f2bf6eae8.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>怎么选择接口和抽象类：如果要创建一个不带任何方法和成员变量的基类则选择接口，否则选择抽象类。</p>\n<h2 id=\"4java中常用的包\"><a class=\"markdownIt-Anchor\" href=\"#4java中常用的包\">#</a> 4.Java 中常用的包</h2>\n<p>Java.lang  java.util  <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEuaW8=\">java.io</span>  <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEuaW8=\">java.io</span>  <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEubmV0\">java.net</span>  java.sql</p>\n<h2 id=\"5java-是值传递还是引用传递\"><a class=\"markdownIt-Anchor\" href=\"#5java-是值传递还是引用传递\">#</a> 5.Java 是值传递还是引用传递？</h2>\n<p>Java 是值传递的，当我们调用需要传参的函数时，传递过去的参数是它的副本而不是它本身<br>\n<img data-src=\"https://img-blog.csdnimg.cn/b9f8506f3bcd4c168d64ef20c602da87.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"6static-关键字的含义\"><a class=\"markdownIt-Anchor\" href=\"#6static-关键字的含义\">#</a> 6.static 关键字的含义？</h2>\n<p>被 static 修饰的成员变量或方法可以直接通过类名调用。静态块在编译时被调用。</p>\n<h2 id=\"7i和i的不同之处\"><a class=\"markdownIt-Anchor\" href=\"#7i和i的不同之处\">#</a> 7.i<ins> 和</ins> i 的不同之处？</h2>\n<p>两者在运算之前都会把变量值 + 1.<br>\n 后置 ++ 会将变量赋值给一个临时变量，接下来对临时变量 + 1，然后用临时变量进行运算。</p>\n<h2 id=\"8truefalse-与-null是关键字吗\"><a class=\"markdownIt-Anchor\" href=\"#8truefalse-与-null是关键字吗\">#</a> 8.true，false 与 null 是关键字吗？</h2>\n<p>true false 是布尔类型的字面常量，null 是引用类型的字面常量。</p>\n<h2 id=\"9java内存分布\"><a class=\"markdownIt-Anchor\" href=\"#9java内存分布\">#</a> 9.Java 内存分布</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/66b3b7ba39a94249957f043224b6bbd2.jpeg#pic_center\" alt=\"在这里插入图片描述\"><br>\n<strong>栈</strong>：一般存基础数据类型的值和对象以及基础数据类型的引用<br>\n<strong>堆</strong>：存储创建好的对象和数组，jvm 只有一个堆，被所有的线程共享<br>\n<strong>方法区</strong>：jvm 只有一个方法区，被所有线程共享。用于存储常量和存储类。</p>\n<h2 id=\"10java反射的实现过程和作用\"><a class=\"markdownIt-Anchor\" href=\"#10java反射的实现过程和作用\">#</a> 10.Java 反射的实现过程和作用</h2>\n<p><strong>实现过程</strong>：Java 语言编译完之后会生成一个.class 文件，反射就是通过字节码找到一个类和 类中的方法和属性等。<br>\n<strong>作用</strong>：反射机制就是指程序运行过程中可以获取自身的信息。在 Java 中 只要知道类的名字就可以通过反射机制找到类的所有信息。</p>\n<h2 id=\"11请问error和exception有什么区别\"><a class=\"markdownIt-Anchor\" href=\"#11请问error和exception有什么区别\">#</a> 11. 请问 error 和 exception 有什么区别？</h2>\n<p>error 表示恢复不是不可能但十分困难的一种严重问题，例如，内存溢出。<br>\nexception 表示一种设计或实现问题。表示，如果程序正常运行，就从不会发生的情况。</p>\n<h2 id=\"12ajax中get-和-post的区别\"><a class=\"markdownIt-Anchor\" href=\"#12ajax中get-和-post的区别\">#</a> 12.AJAX 中 get 和 post 的区别。</h2>\n<p>get 传输 把数据添加到 url 中发送。get 传输简单数据，数据大小在 1kb 以下。get 传输的数据会被浏览器缓存下来。<br>\npost 传输 把各表单数据及元素作为 HTML 的消息实体内容传递给 web 服务器。post 没有长度限制。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1面向对象的特征\"><a class=\"markdownIt-Anchor\" href=\"#1面向对象的特征\">#</a> 1. 面向对象的特征</h2>\n<p><strong>继承，封装，多态。</strong><br>\n<strong>封装</strong>：将对象的实现细节隐藏起来，然后通过公共方法暴露出该对象的功能。<br>\n<strong>继承</strong>：实现软件复用。子类继承父类后可以直接或间接地使用父类的成员。<br>\n<strong>多态</strong>：同一个行为具有不同的表现形式。</p>\n<h2 id=\"2java中覆盖和重载的区别\"><a class=\"markdownIt-Anchor\" href=\"#2java中覆盖和重载的区别\">#</a> 2.JAVA 中覆盖和重载的区别</h2>\n<p><strong>覆盖</strong>：子类对父类方法的一种重写。返回值，方法名，参数列表必须相同。访问权限大于等于父类。抛出的异常要小于父类<br>\n<strong>重载</strong>：在一个类中可以有多个重名的方法，根据 参数个数不同，参数类型不同，参数顺序不同  而构成重载。</p>\n<h2 id=\"3抽象类和接口的区别\"><a class=\"markdownIt-Anchor\" href=\"#3抽象类和接口的区别\">#</a> 3. 抽象类和接口的区别</h2>\n<p>1 .  抽象类可以没有抽象方法，但接口中的方法必须是抽象的。<br>\n2 . 抽象类只能被一个类继承，而接口可以继承多个父接口。<br>\n3 . 抽象类可以有普通成员变量，但 接口中的变量必须被初始化，接口中只有常量没有变量。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/47fb42cf20bd4883a3e1222f2bf6eae8.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>怎么选择接口和抽象类：如果要创建一个不带任何方法和成员变量的基类则选择接口，否则选择抽象类。</p>\n<h2 id=\"4java中常用的包\"><a class=\"markdownIt-Anchor\" href=\"#4java中常用的包\">#</a> 4.Java 中常用的包</h2>\n<p>Java.lang  java.util  <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEuaW8=\">java.io</span>  <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEuaW8=\">java.io</span>  <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEubmV0\">java.net</span>  java.sql</p>\n<h2 id=\"5java-是值传递还是引用传递\"><a class=\"markdownIt-Anchor\" href=\"#5java-是值传递还是引用传递\">#</a> 5.Java 是值传递还是引用传递？</h2>\n<p>Java 是值传递的，当我们调用需要传参的函数时，传递过去的参数是它的副本而不是它本身<br>\n<img data-src=\"https://img-blog.csdnimg.cn/b9f8506f3bcd4c168d64ef20c602da87.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"6static-关键字的含义\"><a class=\"markdownIt-Anchor\" href=\"#6static-关键字的含义\">#</a> 6.static 关键字的含义？</h2>\n<p>被 static 修饰的成员变量或方法可以直接通过类名调用。静态块在编译时被调用。</p>\n<h2 id=\"7i和i的不同之处\"><a class=\"markdownIt-Anchor\" href=\"#7i和i的不同之处\">#</a> 7.i<ins> 和</ins> i 的不同之处？</h2>\n<p>两者在运算之前都会把变量值 + 1.<br>\n 后置 ++ 会将变量赋值给一个临时变量，接下来对临时变量 + 1，然后用临时变量进行运算。</p>\n<h2 id=\"8truefalse-与-null是关键字吗\"><a class=\"markdownIt-Anchor\" href=\"#8truefalse-与-null是关键字吗\">#</a> 8.true，false 与 null 是关键字吗？</h2>\n<p>true false 是布尔类型的字面常量，null 是引用类型的字面常量。</p>\n<h2 id=\"9java内存分布\"><a class=\"markdownIt-Anchor\" href=\"#9java内存分布\">#</a> 9.Java 内存分布</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/66b3b7ba39a94249957f043224b6bbd2.jpeg#pic_center\" alt=\"在这里插入图片描述\"><br>\n<strong>栈</strong>：一般存基础数据类型的值和对象以及基础数据类型的引用<br>\n<strong>堆</strong>：存储创建好的对象和数组，jvm 只有一个堆，被所有的线程共享<br>\n<strong>方法区</strong>：jvm 只有一个方法区，被所有线程共享。用于存储常量和存储类。</p>\n<h2 id=\"10java反射的实现过程和作用\"><a class=\"markdownIt-Anchor\" href=\"#10java反射的实现过程和作用\">#</a> 10.Java 反射的实现过程和作用</h2>\n<p><strong>实现过程</strong>：Java 语言编译完之后会生成一个.class 文件，反射就是通过字节码找到一个类和 类中的方法和属性等。<br>\n<strong>作用</strong>：反射机制就是指程序运行过程中可以获取自身的信息。在 Java 中 只要知道类的名字就可以通过反射机制找到类的所有信息。</p>\n<h2 id=\"11请问error和exception有什么区别\"><a class=\"markdownIt-Anchor\" href=\"#11请问error和exception有什么区别\">#</a> 11. 请问 error 和 exception 有什么区别？</h2>\n<p>error 表示恢复不是不可能但十分困难的一种严重问题，例如，内存溢出。<br>\nexception 表示一种设计或实现问题。表示，如果程序正常运行，就从不会发生的情况。</p>\n<h2 id=\"12ajax中get-和-post的区别\"><a class=\"markdownIt-Anchor\" href=\"#12ajax中get-和-post的区别\">#</a> 12.AJAX 中 get 和 post 的区别。</h2>\n<p>get 传输 把数据添加到 url 中发送。get 传输简单数据，数据大小在 1kb 以下。get 传输的数据会被浏览器缓存下来。<br>\npost 传输 把各表单数据及元素作为 HTML 的消息实体内容传递给 web 服务器。post 没有长度限制。</p>\n"},{"title":"myBatis 面试题","date":"2022-06-29T04:27:11.000Z","_content":"Mybatis中文网：[请戳此](https://mybatis.net.cn/)\n## MyBatis 缓存\n **缓存**：暂存一些数据，加快系统查询速度。\n \n **Mybatis缓存机制**：本质是一个**Map**,能保存一些数据。\n \n **一级缓存**：线程级别的缓存。也称本地缓存或**sqlSession**级别的缓存。（和数据库的一次会话就有一次一级缓存）\n \n **二级缓存**：全局范围的缓存。（除了当前线程和**SqlSession** 能用外，其他的都能用）\n\n### 一级缓存\n只要之前查询过的数据，**MyBatis**都会保存在缓存中，下次获取这些数据，都会直接在缓存中拿。\n\n>  注：**SpringBoot + Mybatis 一级缓存会失效**。原因是经过Spring的处理，每次查询完成后，都会关闭**sqlSession**，而一级缓存是**sqlSession**级别的缓存。\n\n#### 缓存失效的几种情况\n\n 1. 不同的 **sqlSession** ，同一级的缓存。\n 2. 同一个方法，不同的参数。\n 3. 在同一个**sqlSession**期间执行过任何一次增删改操作。\n 4. 手动清空了缓存。\n\n### 二级缓存\n\n> 二级缓存没有，就去看一级缓存，一级缓存没有，就去读数据库。\n> 关闭 **sqlSession** 会把一级缓存数据放在二级缓存中。\n\n## MyBatis 动态标签\n> **if、where、trim、set、foreach、collection、choose、sql、include、bing**\n\n### if : 类似java中单分支  if  判断\n```xml\n SELECT\n\t*\n FROM\n \ttbl_navigation a\n WHERE\n\t<if test=\"obj.navigationId!=null and obj.navigationId!=''\">\n\t    a.column_type = #{obj.navigationId}\n\t</if>\n\t<if test=\"obj.id!=null and obj.id!=''\">\n\t    a.column_type = #{obj.id}\n\t</if>\n```\n### choose、when、otherwise \n\n>  **类似Java 的 if-else。**\n>  1.当title 不为空， 选择title。\n>  2.当content 不为空，title为空，选择content 。\n>  3.当content 和 title 都为空，选择 otherwise。\n>  4.当content 和 title 都为不为空，选择 title。\n\n```xml\nselect * from tbl_column\n<where>\n      <choose >\n          <when test=\"obj.title != null\">\n                 and title like #{obj.title}\n          </when>\n          <when test=\"content != null\">\n                 and content like #{obj.content}\n          </when>\n          <otherwise>\n                 and delete = 1\n          </otherwise>\n     </choose>\n</where>\n```\n### trim、where、set\n> **where**: 替换sql语句中的where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。\n>  **trim**: 可以去除 or 和and，在语句中拼接前缀或后缀。\n> **set**: 替换sql语句中的set。动态在行首添加 set 删除子元素首行逗号。\n\n### foreach\n\n> 类似java 中的 foreach。\n> **collection：collection**集合，可以为List,Set,Map。\n> **item**： 每次遍历，index 对应的 对象。 \n> **index**： 当前数组的下标\n>  **open=\"(\" separator=\",\" close=\")\">** ：循环开始前加 '('，循环结束后加 ')'。循环过程中，每次循环结束后加，。\n\n以下为官网案例：\n```xml\n<select id=\"selectPostIn\" resultType=\"domain.blog.Post\">\n  SELECT *\n  FROM POST P\n  WHERE ID in\n  <foreach item=\"item\" index=\"index\" collection=\"list\"\n      open=\"(\" separator=\",\" close=\")\">\n        #{item}\n  </foreach>\n</select>\n```\n### ","source":"_posts/myBatis-面试题.md","raw":"---\ntitle: myBatis 面试题\ndate: 2022-06-29 12:27:11\ntags:\n    mybatis\ncategories:\n- 面试题集\n---\nMybatis中文网：[请戳此](https://mybatis.net.cn/)\n## MyBatis 缓存\n **缓存**：暂存一些数据，加快系统查询速度。\n \n **Mybatis缓存机制**：本质是一个**Map**,能保存一些数据。\n \n **一级缓存**：线程级别的缓存。也称本地缓存或**sqlSession**级别的缓存。（和数据库的一次会话就有一次一级缓存）\n \n **二级缓存**：全局范围的缓存。（除了当前线程和**SqlSession** 能用外，其他的都能用）\n\n### 一级缓存\n只要之前查询过的数据，**MyBatis**都会保存在缓存中，下次获取这些数据，都会直接在缓存中拿。\n\n>  注：**SpringBoot + Mybatis 一级缓存会失效**。原因是经过Spring的处理，每次查询完成后，都会关闭**sqlSession**，而一级缓存是**sqlSession**级别的缓存。\n\n#### 缓存失效的几种情况\n\n 1. 不同的 **sqlSession** ，同一级的缓存。\n 2. 同一个方法，不同的参数。\n 3. 在同一个**sqlSession**期间执行过任何一次增删改操作。\n 4. 手动清空了缓存。\n\n### 二级缓存\n\n> 二级缓存没有，就去看一级缓存，一级缓存没有，就去读数据库。\n> 关闭 **sqlSession** 会把一级缓存数据放在二级缓存中。\n\n## MyBatis 动态标签\n> **if、where、trim、set、foreach、collection、choose、sql、include、bing**\n\n### if : 类似java中单分支  if  判断\n```xml\n SELECT\n\t*\n FROM\n \ttbl_navigation a\n WHERE\n\t<if test=\"obj.navigationId!=null and obj.navigationId!=''\">\n\t    a.column_type = #{obj.navigationId}\n\t</if>\n\t<if test=\"obj.id!=null and obj.id!=''\">\n\t    a.column_type = #{obj.id}\n\t</if>\n```\n### choose、when、otherwise \n\n>  **类似Java 的 if-else。**\n>  1.当title 不为空， 选择title。\n>  2.当content 不为空，title为空，选择content 。\n>  3.当content 和 title 都为空，选择 otherwise。\n>  4.当content 和 title 都为不为空，选择 title。\n\n```xml\nselect * from tbl_column\n<where>\n      <choose >\n          <when test=\"obj.title != null\">\n                 and title like #{obj.title}\n          </when>\n          <when test=\"content != null\">\n                 and content like #{obj.content}\n          </when>\n          <otherwise>\n                 and delete = 1\n          </otherwise>\n     </choose>\n</where>\n```\n### trim、where、set\n> **where**: 替换sql语句中的where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。\n>  **trim**: 可以去除 or 和and，在语句中拼接前缀或后缀。\n> **set**: 替换sql语句中的set。动态在行首添加 set 删除子元素首行逗号。\n\n### foreach\n\n> 类似java 中的 foreach。\n> **collection：collection**集合，可以为List,Set,Map。\n> **item**： 每次遍历，index 对应的 对象。 \n> **index**： 当前数组的下标\n>  **open=\"(\" separator=\",\" close=\")\">** ：循环开始前加 '('，循环结束后加 ')'。循环过程中，每次循环结束后加，。\n\n以下为官网案例：\n```xml\n<select id=\"selectPostIn\" resultType=\"domain.blog.Post\">\n  SELECT *\n  FROM POST P\n  WHERE ID in\n  <foreach item=\"item\" index=\"index\" collection=\"list\"\n      open=\"(\" separator=\",\" close=\")\">\n        #{item}\n  </foreach>\n</select>\n```\n### ","slug":"myBatis-面试题","published":1,"updated":"2022-06-29T08:10:02.725Z","_id":"cl4zaqwkx0009w4ujhkuq31r4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Mybatis 中文网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teWJhdGlzLm5ldC5jbi8=\">请戳此</span></p>\n<h2 id=\"mybatis-缓存\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-缓存\">#</a> MyBatis 缓存</h2>\n<p><strong>缓存</strong>：暂存一些数据，加快系统查询速度。</p>\n<p><strong>Mybatis 缓存机制</strong>：本质是一个<strong> Map</strong>, 能保存一些数据。</p>\n<p><strong>一级缓存</strong>：线程级别的缓存。也称本地缓存或<strong> sqlSession</strong> 级别的缓存。（和数据库的一次会话就有一次一级缓存）</p>\n<p><strong>二级缓存</strong>：全局范围的缓存。（除了当前线程和<strong> SqlSession</strong> 能用外，其他的都能用）</p>\n<h3 id=\"一级缓存\"><a class=\"markdownIt-Anchor\" href=\"#一级缓存\">#</a> 一级缓存</h3>\n<p>只要之前查询过的数据，<strong>MyBatis</strong> 都会保存在缓存中，下次获取这些数据，都会直接在缓存中拿。</p>\n<blockquote>\n<p>注：<strong>SpringBoot + Mybatis 一级缓存会失效</strong>。原因是经过 Spring 的处理，每次查询完成后，都会关闭<strong> sqlSession</strong>，而一级缓存是<strong> sqlSession</strong> 级别的缓存。</p>\n</blockquote>\n<h4 id=\"缓存失效的几种情况\"><a class=\"markdownIt-Anchor\" href=\"#缓存失效的几种情况\">#</a> 缓存失效的几种情况</h4>\n<ol>\n<li>不同的 <strong>sqlSession</strong> ，同一级的缓存。</li>\n<li>同一个方法，不同的参数。</li>\n<li>在同一个<strong> sqlSession</strong> 期间执行过任何一次增删改操作。</li>\n<li>手动清空了缓存。</li>\n</ol>\n<h3 id=\"二级缓存\"><a class=\"markdownIt-Anchor\" href=\"#二级缓存\">#</a> 二级缓存</h3>\n<blockquote>\n<p>二级缓存没有，就去看一级缓存，一级缓存没有，就去读数据库。<br>\n关闭 <strong>sqlSession</strong> 会把一级缓存数据放在二级缓存中。</p>\n</blockquote>\n<h2 id=\"mybatis-动态标签\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-动态标签\">#</a> MyBatis 动态标签</h2>\n<blockquote>\n<p><strong>if、where、trim、set、foreach、collection、choose、sql、include、bing</strong></p>\n</blockquote>\n<h3 id=\"if-类似java中单分支-if-判断\"><a class=\"markdownIt-Anchor\" href=\"#if-类似java中单分支-if-判断\">#</a> if : 类似 java 中单分支  if  判断</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">*</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\ttbl_navigation a</span><br><span class=\"line\">WHERE</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.navigationId!=null and obj.navigationId!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.navigationId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.id!=null and obj.id!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"choose-when-otherwise\"><a class=\"markdownIt-Anchor\" href=\"#choose-when-otherwise\">#</a> choose、when、otherwise</h3>\n<blockquote>\n<p><strong>类似 Java 的 if-else。</strong><br>\n1. 当 title 不为空， 选择 title。<br>\n2. 当 content 不为空，title 为空，选择 content 。<br>\n3. 当 content 和 title 都为空，选择 otherwise。<br>\n4. 当 content 和 title 都为不为空，选择 title。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tbl_column</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">choose</span> &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.title != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and title like #&#123;obj.title&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;content != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and content like #&#123;obj.content&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">                 and delete = 1</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"trim-where-set\"><a class=\"markdownIt-Anchor\" href=\"#trim-where-set\">#</a> trim、where、set</h3>\n<blockquote>\n<p><strong>where</strong>: 替换 sql 语句中的 where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。<br>\n<strong>trim</strong>: 可以去除 or 和 and，在语句中拼接前缀或后缀。<br>\n<strong>set</strong>: 替换 sql 语句中的 set。动态在行首添加 set 删除子元素首行逗号。</p>\n</blockquote>\n<h3 id=\"foreach\"><a class=\"markdownIt-Anchor\" href=\"#foreach\">#</a> foreach</h3>\n<blockquote>\n<p>类似 java 中的 foreach。<br>\n<strong>collection：collection</strong> 集合，可以为 List,Set,Map。<br>\n<strong>item</strong>： 每次遍历，index 对应的 对象。<br>\n<strong>index</strong>： 当前数组的下标<br>\n<strong> open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</strong> ：循环开始前加 ‘(’，循环结束后加 ‘)’。循环过程中，每次循环结束后加，。</p>\n</blockquote>\n<p>以下为官网案例：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPostIn&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class=\"line\">  SELECT *</span><br><span class=\"line\">  FROM POST P</span><br><span class=\"line\">  WHERE ID in</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;index&quot;</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;list&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;item&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h3>\n","site":{"data":{}},"excerpt":"","more":"<p>Mybatis 中文网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teWJhdGlzLm5ldC5jbi8=\">请戳此</span></p>\n<h2 id=\"mybatis-缓存\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-缓存\">#</a> MyBatis 缓存</h2>\n<p><strong>缓存</strong>：暂存一些数据，加快系统查询速度。</p>\n<p><strong>Mybatis 缓存机制</strong>：本质是一个<strong> Map</strong>, 能保存一些数据。</p>\n<p><strong>一级缓存</strong>：线程级别的缓存。也称本地缓存或<strong> sqlSession</strong> 级别的缓存。（和数据库的一次会话就有一次一级缓存）</p>\n<p><strong>二级缓存</strong>：全局范围的缓存。（除了当前线程和<strong> SqlSession</strong> 能用外，其他的都能用）</p>\n<h3 id=\"一级缓存\"><a class=\"markdownIt-Anchor\" href=\"#一级缓存\">#</a> 一级缓存</h3>\n<p>只要之前查询过的数据，<strong>MyBatis</strong> 都会保存在缓存中，下次获取这些数据，都会直接在缓存中拿。</p>\n<blockquote>\n<p>注：<strong>SpringBoot + Mybatis 一级缓存会失效</strong>。原因是经过 Spring 的处理，每次查询完成后，都会关闭<strong> sqlSession</strong>，而一级缓存是<strong> sqlSession</strong> 级别的缓存。</p>\n</blockquote>\n<h4 id=\"缓存失效的几种情况\"><a class=\"markdownIt-Anchor\" href=\"#缓存失效的几种情况\">#</a> 缓存失效的几种情况</h4>\n<ol>\n<li>不同的 <strong>sqlSession</strong> ，同一级的缓存。</li>\n<li>同一个方法，不同的参数。</li>\n<li>在同一个<strong> sqlSession</strong> 期间执行过任何一次增删改操作。</li>\n<li>手动清空了缓存。</li>\n</ol>\n<h3 id=\"二级缓存\"><a class=\"markdownIt-Anchor\" href=\"#二级缓存\">#</a> 二级缓存</h3>\n<blockquote>\n<p>二级缓存没有，就去看一级缓存，一级缓存没有，就去读数据库。<br>\n关闭 <strong>sqlSession</strong> 会把一级缓存数据放在二级缓存中。</p>\n</blockquote>\n<h2 id=\"mybatis-动态标签\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-动态标签\">#</a> MyBatis 动态标签</h2>\n<blockquote>\n<p><strong>if、where、trim、set、foreach、collection、choose、sql、include、bing</strong></p>\n</blockquote>\n<h3 id=\"if-类似java中单分支-if-判断\"><a class=\"markdownIt-Anchor\" href=\"#if-类似java中单分支-if-判断\">#</a> if : 类似 java 中单分支  if  判断</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">*</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\ttbl_navigation a</span><br><span class=\"line\">WHERE</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.navigationId!=null and obj.navigationId!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.navigationId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.id!=null and obj.id!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"choose-when-otherwise\"><a class=\"markdownIt-Anchor\" href=\"#choose-when-otherwise\">#</a> choose、when、otherwise</h3>\n<blockquote>\n<p><strong>类似 Java 的 if-else。</strong><br>\n1. 当 title 不为空， 选择 title。<br>\n2. 当 content 不为空，title 为空，选择 content 。<br>\n3. 当 content 和 title 都为空，选择 otherwise。<br>\n4. 当 content 和 title 都为不为空，选择 title。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tbl_column</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">choose</span> &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.title != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and title like #&#123;obj.title&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;content != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and content like #&#123;obj.content&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">                 and delete = 1</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"trim-where-set\"><a class=\"markdownIt-Anchor\" href=\"#trim-where-set\">#</a> trim、where、set</h3>\n<blockquote>\n<p><strong>where</strong>: 替换 sql 语句中的 where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。<br>\n<strong>trim</strong>: 可以去除 or 和 and，在语句中拼接前缀或后缀。<br>\n<strong>set</strong>: 替换 sql 语句中的 set。动态在行首添加 set 删除子元素首行逗号。</p>\n</blockquote>\n<h3 id=\"foreach\"><a class=\"markdownIt-Anchor\" href=\"#foreach\">#</a> foreach</h3>\n<blockquote>\n<p>类似 java 中的 foreach。<br>\n<strong>collection：collection</strong> 集合，可以为 List,Set,Map。<br>\n<strong>item</strong>： 每次遍历，index 对应的 对象。<br>\n<strong>index</strong>： 当前数组的下标<br>\n<strong> open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</strong> ：循环开始前加 ‘(’，循环结束后加 ‘)’。循环过程中，每次循环结束后加，。</p>\n</blockquote>\n<p>以下为官网案例：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPostIn&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class=\"line\">  SELECT *</span><br><span class=\"line\">  FROM POST P</span><br><span class=\"line\">  WHERE ID in</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;index&quot;</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;list&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;item&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h3>\n"},{"title":"shoka 食用手册","sticky":true,"_content":"## shoka 主题安装和配置\n\nshok主题安装：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/)\nshoka依赖插件的安装和配置：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/)\nshoka主题基本配置：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/config/)\nshoka界面显示相关配置：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/)\n\n## MyBatis 动态标签\n> **if、where、trim、set、foreach、collection、choose、sql、include、bing**\n\n### if : 类似java中单分支  if  判断\n```xml\n SELECT\n\t*\n FROM\n \ttbl_navigation a\n WHERE\n\t<if test=\"obj.navigationId!=null and obj.navigationId!=''\">\n\t    a.column_type = #{obj.navigationId}\n\t</if>\n\t<if test=\"obj.id!=null and obj.id!=''\">\n\t    a.column_type = #{obj.id}\n\t</if>\n```\n### choose、when、otherwise \n\n>  **类似Java 的 if-else。**\n>  1.当title 不为空， 选择title。\n>  2.当content 不为空，title为空，选择content 。\n>  3.当content 和 title 都为空，选择 otherwise。\n>  4.当content 和 title 都为不为空，选择 title。\n\n```xml\nselect * from tbl_column\n<where>\n      <choose >\n          <when test=\"obj.title != null\">\n                 and title like #{obj.title}\n          </when>\n          <when test=\"content != null\">\n                 and content like #{obj.content}\n          </when>\n          <otherwise>\n                 and delete = 1\n          </otherwise>\n     </choose>\n</where>\n```\n### trim、where、set\n> **where**: 替换sql语句中的where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。\n>  **trim**: 可以去除 or 和and，在语句中拼接前缀或后缀。\n> **set**: 替换sql语句中的set。动态在行首添加 set 删除子元素首行逗号。\n\n### foreach\n\n> 类似java 中的 foreach。\n> **collection：collection**集合，可以为List,Set,Map。\n> **item**： 每次遍历，index 对应的 对象。 \n> **index**： 当前数组的下标\n>  **open=\"(\" separator=\",\" close=\")\">** ：循环开始前加 '('，循环结束后加 ')'。循环过程中，每次循环结束后加，。\n\n以下为官网案例：\n```xml\n<select id=\"selectPostIn\" resultType=\"domain.blog.Post\">\n  SELECT *\n  FROM POST P\n  WHERE ID in\n  <foreach item=\"item\" index=\"index\" collection=\"list\"\n      open=\"(\" separator=\",\" close=\")\">\n        #{item}\n  </foreach>\n</select>\n```\n### ","source":"_posts/shoka 食用手册.md","raw":"---\ntitle: shoka 食用手册\nsticky: true\ntags:\n- hexo\ncategories:\n- 软件安装\n---\n## shoka 主题安装和配置\n\nshok主题安装：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/)\nshoka依赖插件的安装和配置：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/)\nshoka主题基本配置：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/config/)\nshoka界面显示相关配置：[请戳此](https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/)\n\n## MyBatis 动态标签\n> **if、where、trim、set、foreach、collection、choose、sql、include、bing**\n\n### if : 类似java中单分支  if  判断\n```xml\n SELECT\n\t*\n FROM\n \ttbl_navigation a\n WHERE\n\t<if test=\"obj.navigationId!=null and obj.navigationId!=''\">\n\t    a.column_type = #{obj.navigationId}\n\t</if>\n\t<if test=\"obj.id!=null and obj.id!=''\">\n\t    a.column_type = #{obj.id}\n\t</if>\n```\n### choose、when、otherwise \n\n>  **类似Java 的 if-else。**\n>  1.当title 不为空， 选择title。\n>  2.当content 不为空，title为空，选择content 。\n>  3.当content 和 title 都为空，选择 otherwise。\n>  4.当content 和 title 都为不为空，选择 title。\n\n```xml\nselect * from tbl_column\n<where>\n      <choose >\n          <when test=\"obj.title != null\">\n                 and title like #{obj.title}\n          </when>\n          <when test=\"content != null\">\n                 and content like #{obj.content}\n          </when>\n          <otherwise>\n                 and delete = 1\n          </otherwise>\n     </choose>\n</where>\n```\n### trim、where、set\n> **where**: 替换sql语句中的where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。\n>  **trim**: 可以去除 or 和and，在语句中拼接前缀或后缀。\n> **set**: 替换sql语句中的set。动态在行首添加 set 删除子元素首行逗号。\n\n### foreach\n\n> 类似java 中的 foreach。\n> **collection：collection**集合，可以为List,Set,Map。\n> **item**： 每次遍历，index 对应的 对象。 \n> **index**： 当前数组的下标\n>  **open=\"(\" separator=\",\" close=\")\">** ：循环开始前加 '('，循环结束后加 ')'。循环过程中，每次循环结束后加，。\n\n以下为官网案例：\n```xml\n<select id=\"selectPostIn\" resultType=\"domain.blog.Post\">\n  SELECT *\n  FROM POST P\n  WHERE ID in\n  <foreach item=\"item\" index=\"index\" collection=\"list\"\n      open=\"(\" separator=\",\" close=\")\">\n        #{item}\n  </foreach>\n</select>\n```\n### ","slug":"shoka 食用手册","published":1,"date":"2022-06-29T02:52:07.047Z","updated":"2022-06-29T07:46:10.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zaqwl0000bw4uj85v14tj4","content":"<h2 id=\"shoka-主题安装和配置\"><a class=\"markdownIt-Anchor\" href=\"#shoka-主题安装和配置\">#</a> shoka 主题安装和配置</h2>\n<p>shok 主题安装：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">请戳此</span><br>\n shoka 依赖插件的安装和配置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">请戳此</span><br>\n shoka 主题基本配置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">请戳此</span><br>\n shoka 界面显示相关配置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">请戳此</span></p>\n<h2 id=\"mybatis-动态标签\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-动态标签\">#</a> MyBatis 动态标签</h2>\n<blockquote>\n<p><strong>if、where、trim、set、foreach、collection、choose、sql、include、bing</strong></p>\n</blockquote>\n<h3 id=\"if-类似java中单分支-if-判断\"><a class=\"markdownIt-Anchor\" href=\"#if-类似java中单分支-if-判断\">#</a> if : 类似 java 中单分支  if  判断</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">*</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\ttbl_navigation a</span><br><span class=\"line\">WHERE</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.navigationId!=null and obj.navigationId!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.navigationId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.id!=null and obj.id!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"choose-when-otherwise\"><a class=\"markdownIt-Anchor\" href=\"#choose-when-otherwise\">#</a> choose、when、otherwise</h3>\n<blockquote>\n<p><strong>类似 Java 的 if-else。</strong><br>\n1. 当 title 不为空， 选择 title。<br>\n2. 当 content 不为空，title 为空，选择 content 。<br>\n3. 当 content 和 title 都为空，选择 otherwise。<br>\n4. 当 content 和 title 都为不为空，选择 title。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tbl_column</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">choose</span> &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.title != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and title like #&#123;obj.title&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;content != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and content like #&#123;obj.content&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">                 and delete = 1</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"trim-where-set\"><a class=\"markdownIt-Anchor\" href=\"#trim-where-set\">#</a> trim、where、set</h3>\n<blockquote>\n<p><strong>where</strong>: 替换 sql 语句中的 where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。<br>\n<strong>trim</strong>: 可以去除 or 和 and，在语句中拼接前缀或后缀。<br>\n<strong>set</strong>: 替换 sql 语句中的 set。动态在行首添加 set 删除子元素首行逗号。</p>\n</blockquote>\n<h3 id=\"foreach\"><a class=\"markdownIt-Anchor\" href=\"#foreach\">#</a> foreach</h3>\n<blockquote>\n<p>类似 java 中的 foreach。<br>\n<strong>collection：collection</strong> 集合，可以为 List,Set,Map。<br>\n<strong>item</strong>： 每次遍历，index 对应的 对象。<br>\n<strong>index</strong>： 当前数组的下标<br>\n<strong> open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</strong> ：循环开始前加 ‘(’，循环结束后加 ‘)’。循环过程中，每次循环结束后加，。</p>\n</blockquote>\n<p>以下为官网案例：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPostIn&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class=\"line\">  SELECT *</span><br><span class=\"line\">  FROM POST P</span><br><span class=\"line\">  WHERE ID in</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;index&quot;</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;list&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;item&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h3>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"shoka-主题安装和配置\"><a class=\"markdownIt-Anchor\" href=\"#shoka-主题安装和配置\">#</a> shoka 主题安装和配置</h2>\n<p>shok 主题安装：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">请戳此</span><br>\n shoka 依赖插件的安装和配置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">请戳此</span><br>\n shoka 主题基本配置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">请戳此</span><br>\n shoka 界面显示相关配置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">请戳此</span></p>\n<h2 id=\"mybatis-动态标签\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-动态标签\">#</a> MyBatis 动态标签</h2>\n<blockquote>\n<p><strong>if、where、trim、set、foreach、collection、choose、sql、include、bing</strong></p>\n</blockquote>\n<h3 id=\"if-类似java中单分支-if-判断\"><a class=\"markdownIt-Anchor\" href=\"#if-类似java中单分支-if-判断\">#</a> if : 类似 java 中单分支  if  判断</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">*</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\ttbl_navigation a</span><br><span class=\"line\">WHERE</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.navigationId!=null and obj.navigationId!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.navigationId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.id!=null and obj.id!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    a.column_type = #&#123;obj.id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"choose-when-otherwise\"><a class=\"markdownIt-Anchor\" href=\"#choose-when-otherwise\">#</a> choose、when、otherwise</h3>\n<blockquote>\n<p><strong>类似 Java 的 if-else。</strong><br>\n1. 当 title 不为空， 选择 title。<br>\n2. 当 content 不为空，title 为空，选择 content 。<br>\n3. 当 content 和 title 都为空，选择 otherwise。<br>\n4. 当 content 和 title 都为不为空，选择 title。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tbl_column</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">choose</span> &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;obj.title != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and title like #&#123;obj.title&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;content != null&quot;</span>&gt;</span></span><br><span class=\"line\">                 and content like #&#123;obj.content&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">                 and delete = 1</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"trim-where-set\"><a class=\"markdownIt-Anchor\" href=\"#trim-where-set\">#</a> trim、where、set</h3>\n<blockquote>\n<p><strong>where</strong>: 替换 sql 语句中的 where。只有当子元素有任何返回的情况，才会拼接 where。当子元素 以 or 或 and 开头 会去除。<br>\n<strong>trim</strong>: 可以去除 or 和 and，在语句中拼接前缀或后缀。<br>\n<strong>set</strong>: 替换 sql 语句中的 set。动态在行首添加 set 删除子元素首行逗号。</p>\n</blockquote>\n<h3 id=\"foreach\"><a class=\"markdownIt-Anchor\" href=\"#foreach\">#</a> foreach</h3>\n<blockquote>\n<p>类似 java 中的 foreach。<br>\n<strong>collection：collection</strong> 集合，可以为 List,Set,Map。<br>\n<strong>item</strong>： 每次遍历，index 对应的 对象。<br>\n<strong>index</strong>： 当前数组的下标<br>\n<strong> open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</strong> ：循环开始前加 ‘(’，循环结束后加 ‘)’。循环过程中，每次循环结束后加，。</p>\n</blockquote>\n<p>以下为官网案例：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPostIn&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class=\"line\">  SELECT *</span><br><span class=\"line\">  FROM POST P</span><br><span class=\"line\">  WHERE ID in</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;index&quot;</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;list&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;item&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h3>\n"},{"title":"redis基础篇","date":"2022-06-29T08:12:54.000Z","_content":"redis中文文档：[请戳此](https://www.redis.net.cn/tutorial/3502.html)\n## NoSql 简介\n### 什么是关系型数据库\n依赖关系模型而创建的数据库就是关系型数据库。关系模型就是 一对一，一对多，多对多这些模型。\n### 关系型数据库遵循 ACIP原则\n 1. A (Atomicity) 原子性:原子不可再分。在一次事务操作中，所有的操作要么全部成功，要么全部失败。\n 2. C (Consistency) 一致性:事务的运行不会改变数据库原有的一致性约束。在一次购物操作前后，a+b 的账户余额是不变的。\n 3. I (Isolation) 独立性:一个事务的操作不会影响到另一个事务的执行。\n 4. D (Durability) 持久性:事务操作一旦提交，就永远保存在数据库中。\n## Redis 简介\n### 什么是Redis?\nRedis 是目前运用较广的一款关系型数据库，遵守BSD协议，是一个高性能的key-value数据库。\nredis 的特点有：\n 1. 不仅仅支持key-value 数据格式，还支持 list，set，zset，hash 等数据结构\n 2. 支持数据的持久化，可以把内存中的数据保存在磁盘中。重启后可以继续使用。\n 3. 支持数据备份。\n","source":"_posts/redis基础篇.md","raw":"---\ntitle: redis基础篇\ndate: 2022-06-29 16:12:54\ntags:\n- redis\ncategories:\n- 数据库\n---\nredis中文文档：[请戳此](https://www.redis.net.cn/tutorial/3502.html)\n## NoSql 简介\n### 什么是关系型数据库\n依赖关系模型而创建的数据库就是关系型数据库。关系模型就是 一对一，一对多，多对多这些模型。\n### 关系型数据库遵循 ACIP原则\n 1. A (Atomicity) 原子性:原子不可再分。在一次事务操作中，所有的操作要么全部成功，要么全部失败。\n 2. C (Consistency) 一致性:事务的运行不会改变数据库原有的一致性约束。在一次购物操作前后，a+b 的账户余额是不变的。\n 3. I (Isolation) 独立性:一个事务的操作不会影响到另一个事务的执行。\n 4. D (Durability) 持久性:事务操作一旦提交，就永远保存在数据库中。\n## Redis 简介\n### 什么是Redis?\nRedis 是目前运用较广的一款关系型数据库，遵守BSD协议，是一个高性能的key-value数据库。\nredis 的特点有：\n 1. 不仅仅支持key-value 数据格式，还支持 list，set，zset，hash 等数据结构\n 2. 支持数据的持久化，可以把内存中的数据保存在磁盘中。重启后可以继续使用。\n 3. 支持数据备份。\n","slug":"redis基础篇","published":1,"updated":"2022-06-29T09:12:19.468Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zdqnum0000x8uj5jfh3g6p","content":"<p>redis 中文文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkaXMubmV0LmNuL3R1dG9yaWFsLzM1MDIuaHRtbA==\">请戳此</span></p>\n<h2 id=\"nosql-简介\"><a class=\"markdownIt-Anchor\" href=\"#nosql-简介\">#</a> NoSql 简介</h2>\n<h3 id=\"什么是关系型数据库\"><a class=\"markdownIt-Anchor\" href=\"#什么是关系型数据库\">#</a> 什么是关系型数据库</h3>\n<p>依赖关系模型而创建的数据库就是关系型数据库。关系模型就是 一对一，一对多，多对多这些模型。</p>\n<h3 id=\"关系型数据库遵循-acip原则\"><a class=\"markdownIt-Anchor\" href=\"#关系型数据库遵循-acip原则\">#</a> 关系型数据库遵循 ACIP 原则</h3>\n<ol>\n<li>A (Atomicity) 原子性：原子不可再分。在一次事务操作中，所有的操作要么全部成功，要么全部失败。</li>\n<li>C (Consistency) 一致性：事务的运行不会改变数据库原有的一致性约束。在一次购物操作前后，a+b 的账户余额是不变的。</li>\n<li>I (Isolation) 独立性：一个事务的操作不会影响到另一个事务的执行。</li>\n<li>D (Durability) 持久性：事务操作一旦提交，就永远保存在数据库中。</li>\n</ol>\n<h2 id=\"redis-简介\"><a class=\"markdownIt-Anchor\" href=\"#redis-简介\">#</a> Redis 简介</h2>\n<h3 id=\"什么是redis\"><a class=\"markdownIt-Anchor\" href=\"#什么是redis\">#</a> 什么是 Redis?</h3>\n<p>Redis 是目前运用较广的一款关系型数据库，遵守 BSD 协议，是一个高性能的 key-value 数据库。<br>\nredis 的特点有：</p>\n<ol>\n<li>不仅仅支持 key-value 数据格式，还支持 list，set，zset，hash 等数据结构</li>\n<li>支持数据的持久化，可以把内存中的数据保存在磁盘中。重启后可以继续使用。</li>\n<li>支持数据备份。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>redis 中文文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkaXMubmV0LmNuL3R1dG9yaWFsLzM1MDIuaHRtbA==\">请戳此</span></p>\n<h2 id=\"nosql-简介\"><a class=\"markdownIt-Anchor\" href=\"#nosql-简介\">#</a> NoSql 简介</h2>\n<h3 id=\"什么是关系型数据库\"><a class=\"markdownIt-Anchor\" href=\"#什么是关系型数据库\">#</a> 什么是关系型数据库</h3>\n<p>依赖关系模型而创建的数据库就是关系型数据库。关系模型就是 一对一，一对多，多对多这些模型。</p>\n<h3 id=\"关系型数据库遵循-acip原则\"><a class=\"markdownIt-Anchor\" href=\"#关系型数据库遵循-acip原则\">#</a> 关系型数据库遵循 ACIP 原则</h3>\n<ol>\n<li>A (Atomicity) 原子性：原子不可再分。在一次事务操作中，所有的操作要么全部成功，要么全部失败。</li>\n<li>C (Consistency) 一致性：事务的运行不会改变数据库原有的一致性约束。在一次购物操作前后，a+b 的账户余额是不变的。</li>\n<li>I (Isolation) 独立性：一个事务的操作不会影响到另一个事务的执行。</li>\n<li>D (Durability) 持久性：事务操作一旦提交，就永远保存在数据库中。</li>\n</ol>\n<h2 id=\"redis-简介\"><a class=\"markdownIt-Anchor\" href=\"#redis-简介\">#</a> Redis 简介</h2>\n<h3 id=\"什么是redis\"><a class=\"markdownIt-Anchor\" href=\"#什么是redis\">#</a> 什么是 Redis?</h3>\n<p>Redis 是目前运用较广的一款关系型数据库，遵守 BSD 协议，是一个高性能的 key-value 数据库。<br>\nredis 的特点有：</p>\n<ol>\n<li>不仅仅支持 key-value 数据格式，还支持 list，set，zset，hash 等数据结构</li>\n<li>支持数据的持久化，可以把内存中的数据保存在磁盘中。重启后可以继续使用。</li>\n<li>支持数据备份。</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl4zaqwkk0001w4uja5mlduht","category_id":"cl4zaqwks0004w4ujbrcjbw5l","_id":"cl4zaqwl5000hw4ujgmtxeehe"},{"post_id":"cl4zaqwkq0003w4ujeladgzi1","category_id":"cl4zaqwl1000cw4ujasrba5r1","_id":"cl4zaqwl6000lw4uj6vsqeajb"},{"post_id":"cl4zaqwku0007w4ujaqvvayb8","category_id":"cl4zaqwl5000iw4uj7p6e4c29","_id":"cl4zaqwl9000qw4ujbellhksv"},{"post_id":"cl4zaqwkx0009w4ujhkuq31r4","category_id":"cl4zaqwl5000iw4uj7p6e4c29","_id":"cl4zaqwl9000tw4uj4e52cn7t"},{"post_id":"cl4zaqwl0000bw4uj85v14tj4","category_id":"cl4zaqwl8000pw4uj03288csj","_id":"cl4zaqwl9000vw4ujavuh0d04"},{"post_id":"cl4zdqnum0000x8uj5jfh3g6p","category_id":"cl4zaqwks0004w4ujbrcjbw5l","_id":"cl4zdqnuw0002x8uj5s7540az"}],"PostTag":[{"post_id":"cl4zaqwkk0001w4uja5mlduht","tag_id":"cl4zaqwkt0005w4uj1oic5wln","_id":"cl4zaqwl2000ew4uj5zxn6r2u"},{"post_id":"cl4zaqwkq0003w4ujeladgzi1","tag_id":"cl4zaqwl1000dw4uj398chhwg","_id":"cl4zaqwl6000kw4uj2f0h7si8"},{"post_id":"cl4zaqwku0007w4ujaqvvayb8","tag_id":"cl4zaqwl5000jw4uj3ecu115p","_id":"cl4zaqwl8000ow4ujgiaod4w7"},{"post_id":"cl4zaqwkx0009w4ujhkuq31r4","tag_id":"cl4zaqwl7000nw4uj0ehcaf75","_id":"cl4zaqwl9000sw4uj768h1rr9"},{"post_id":"cl4zaqwl0000bw4uj85v14tj4","tag_id":"cl4zaqwl9000rw4uja6uje9dp","_id":"cl4zaqwl9000uw4ujewj1hfwp"},{"post_id":"cl4zdqnum0000x8uj5jfh3g6p","tag_id":"cl4zdqnuu0001x8uj8aps2sow","_id":"cl4zdqnuw0003x8ujf84wgqw9"}],"Tag":[{"name":"Mysql","_id":"cl4zaqwkt0005w4uj1oic5wln"},{"name":"spring","_id":"cl4zaqwl1000dw4uj398chhwg"},{"name":"Java","_id":"cl4zaqwl5000jw4uj3ecu115p"},{"name":"mybatis","_id":"cl4zaqwl7000nw4uj0ehcaf75"},{"name":"hexo","_id":"cl4zaqwl9000rw4uja6uje9dp"},{"name":"redis","_id":"cl4zdqnuu0001x8uj8aps2sow"}]}}